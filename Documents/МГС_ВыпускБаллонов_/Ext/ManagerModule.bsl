Процедура ЗаполнитьОбластьСтрока( ДанныеПартии,ТабДок,Добавка)
	
	ЧислоСтрок=4; //  Кол-во строк на странице
	//Временно измение 19.02.2022
	//Если ЭтоБаллоныУкраины(ДанныеПартии) Тогда  
		//Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("ПартияУкраина"); 
		//ЧислоСтрок=2;
	//иначеЕсли ДанныеПартии["ТипВыпуска"]=Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда 
	Если ДанныеПартии["ТипВыпуска"]=Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда //изм
		Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("ПартияМ");
	иначе
		Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("Партия");
	КонецЕсли;
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
	Добавка =1;
	Для Н= 1 по 20 Цикл 
		Если ЗначениеЗаполнено(ДанныеПартии["Баллон"+Н]) Тогда
			Нетто = РассчитатьНетто(ДанныеПартии.ТипБаллона);
			ВесТары = ДанныеПартии["Баллон"+Н].ВесТары;
			Брутто = Нетто+ВесТары;
			
			Брутто =РассчитатьБруттоБаллона(ВесТары,Нетто,ДанныеПартии.Колпак,ДанныеПартии.Кольца);
			ОбластьСтрока.Параметры["Серия"+Добавка]=ПолучитьНомерСерии(ДанныеПартии.ТипВыпуска,ДанныеПартии.нОМЕР);
			ОбластьСтрока.Параметры["НомерПартии"+Добавка]=ДанныеПартии.НомерПартии;
			ОбластьСтрока.Параметры["Нетто"+Добавка]=Строка(Нетто)+" ± 0,2 кг";
			ОбластьСтрока.Параметры["Тара"+Добавка]= ВесТары;	
			
			Если Час(ДанныеПартии.ДатаПартии)>=19 Тогда
				ДатаПартии = НачалоДня(ДанныеПартии.ДатаПартии)+24*3600;
			иначе	
				ДатаПартии = ДанныеПартии.ДатаПартии;
			КонецЕсли; 
			
			ОбластьСтрока.Параметры["ДатаВыпуска"+Добавка]=Формат(ДатаПартии,"ДФ=dd.MM.yyyy");
			ОбластьСтрока.Параметры["Баллон"+Добавка]=ДанныеПартии["Баллон"+Н];
			ОбластьСтрока.Параметры["Брутто"+Добавка]=Брутто;
			
			Если ЧислоСтрок=2 Тогда
				ДатаКонец=ДобавитьМесяц(ДатаПартии,60);
				ДатаКонец=ДатаКонец-24*3600;
				ОбластьСтрока.Параметры["ДатаКонец"+Добавка]=Формат(ДатаКонец,"ДФ=dd.MM.yyyy");
			КонецЕсли;
			
			//Если Добавка =2 Тогда
			ТабДок.Вывести(ОбластьСтрока);
			Если Н%ЧислоСтрок=0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц(); // начнем новую страницу
			Иначе
				ТабДок.Вывести(ОбластьОтступ);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Функция ЭтоБаллоныУкраины(ДанныеПартии) 
	ПервыйСимвол = Лев(ДанныеПартии["Баллон1"],1);
	Если ЗначениеЗаполнено(ПервыйСимвол) и
		СтрНайти("0123456789", ПервыйСимвол ) = 0  Тогда
	      Возврат Истина

		
	
	КонецЕсли;
	
	Возврат ложь
КонецФункции // ()
 

Функция ПечатьПартия(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 10;
	ТабДок.ПолеСнизу			= 10;
	ТабДок.ПолеСправа			= 0;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	//Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("Партия");
	//МакетМ = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("Партия");
	ЭтоПечатьИзТерминала = Ложь;
	Если ТипЗнч(МассивОбъектов) = Тип("Массив") Тогда
		КоличествоЭлементов = МассивОбъектов.количество();
		Если КоличествоЭлементов>0  Тогда
			Если ТипЗнч(МассивОбъектов[КоличествоЭлементов-1]) = Тип("Структура") Тогда		
				ЭтоПечатьИзТерминала = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если не ЭтоПечатьИзТерминала Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка КАК Ссылка,
		|	МГС_ВыпускБаллоновПартииБаллоны.НомерСтроки КАК НомерСтроки,
		|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии,
		|	МГС_ВыпускБаллоновПартииБаллоны.ТипБаллона КАК ТипБаллона,
		|	МГС_ВыпускБаллоновПартииБаллоны.Закрыта КАК Закрыта,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес1 КАК Вес1,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес2 КАК Вес2,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес3 КАК Вес3,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес4 КАК Вес4,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес5 КАК Вес5,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес6 КАК Вес6,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес7 КАК Вес7,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес8 КАК Вес8,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес9 КАК Вес9,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес10 КАК Вес10,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес11 КАК Вес11,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес12 КАК Вес12,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес13 КАК Вес13,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес14 КАК Вес14,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес15 КАК Вес15,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес16 КАК Вес16,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес17 КАК Вес17,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес18 КАК Вес18,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес19 КАК Вес19,
		|	МГС_ВыпускБаллоновПартииБаллоны.Вес20 КАК Вес20,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон1 КАК Баллон1,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон2 КАК Баллон2,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон3 КАК Баллон3,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон4 КАК Баллон4,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон5 КАК Баллон5,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон6 КАК Баллон6,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон7 КАК Баллон7,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон8 КАК Баллон8,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон9 КАК Баллон9,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон10 КАК Баллон10,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон11 КАК Баллон11,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон12 КАК Баллон12,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон13 КАК Баллон13,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон14 КАК Баллон14,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон15 КАК Баллон15,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон16 КАК Баллон16,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон17 КАК Баллон17,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон18 КАК Баллон18,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон19 КАК Баллон19,
		|	МГС_ВыпускБаллоновПартииБаллоны.Баллон20 КАК Баллон20,
		|	МГС_ВыпускБаллоновПартииБаллоны.ОтветственныйЗаПартию КАК ОтветственныйЗаПартию,
		|	МГС_ВыпускБаллоновПартииБаллоны.Колпак КАК Колпак,
		|	МГС_ВыпускБаллоновПартииБаллоны.Кольца КАК Кольца,
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Номер КАК Номер,
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Дата КАК Дата,
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ТипВыпуска КАК ТипВыпуска,
		|	МГС_ВыпускБаллоновПартииБаллоны.ДатаПартии КАК ДатаПартии
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
		|ГДЕ
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка В(&Ссылка)
		|	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ПометкаУдаления = ЛОЖЬ";
		
		//Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
		Выборка = Запрос.Выполнить().Выбрать();
		
		// ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		// ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		// ОбластьДокументыОтгрузкиШапка = Макет.ПолучитьОбласть("ДокументыОтгрузкиШапка");
		//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ТабДок.Очистить();
		Добавка =1;
		ВставлятьРазделительСтраниц = Ложь;
		Пока Выборка.Следующий() Цикл
			Если ВставлятьРазделительСтраниц Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ЗаполнитьОбластьСтрока( Выборка,ТабДок,Добавка);			
		КонецЦикла;
	Иначе 
		СтруктураПартии = МассивОбъектов[КоличествоЭлементов-1]	;
		ЗаполнитьОбластьСтрока( СтруктураПартии,ТабДок,1);
	КонецЕсли;
	Возврат ТабДок;
КонецФункции

Функция ОтчетПоВыпуску(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 10;
	ТабДок.ПолеСнизу			= 10;
	ТабДок.ПолеСправа			= 0;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	
	
	//СхемаСКД = Отчеты.МГС_ОтчетПоВыпускуБаллонов.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");	
	//КомпоновщикНастроекДанныхОтчета = Новый КомпоновщикНастроекКомпоновкиДанных;	
	//КомпоновщикНастроекДанныхОтчета.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));	
	//КомпоновщикНастроекДанныхОтчета.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);	
	//ПользовательскиеОтборы = КомпоновщикНастроекДанныхОтчета.Настройки.Отбор.Элементы;	
	//НовыйЭлемент = ПользовательскиеОтборы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//НовыйЭлемент.Использование  = Истина;
	//ПолеОтбора = Новый ПолеКомпоновкиДанных("Выпуск");
	//НовыйЭлемент.ЛевоеЗначение  = ПолеОтбора;
	//Если МассивОбъектов.Количество() =1 Тогда
	//	НовыйЭлемент.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	//	НовыйЭлемент.ПравоеЗначение = МассивОбъектов[0];
	//Иначе
	//	НовыйЭлемент.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	//	НовыйЭлемент.ПравоеЗначение = МассивОбъектов;
	//КонецЕсли;	
	//КомпоновщикМакетаОСКД = Новый КомпоновщикМакетаКомпоновкиДанных;	
	//Макет = КомпоновщикМакетаОСКД.Выполнить(СхемаСКД, КомпоновщикНастроекДанныхОтчета.ПолучитьНастройки());	
	//ПроцессорКомпоновкиОСКД = Новый ПроцессорКомпоновкиДанных;	
	//ПроцессорКомпоновкиОСКД.Инициализировать(Макет);	
	//ПроцессорВыводаОСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;	
	//ПроцессорВыводаОСКД.УстановитьДокумент(ТабДок);	
	//ПроцессорВыводаОСКД.Вывести(ПроцессорКомпоновкиОСКД);
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("ОтчетПоВыпуску");	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьОтветственный = Макет.ПолучитьОбласть("Ответственный");
	ОбластьПартия = Макет.ПолучитьОбласть("Партия");
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МГС_ВыпускБаллоновПартииБаллоны.ОтветственныйЗаПартию КАК ОтветственныйЗаПартию,
	|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии,
	|	МГС_ВыпускБаллоновПартииБаллоны.ТипБаллона КАК ТипБаллона,
	|	МГС_ВыпускБаллоновПартииБаллоны.ДатаПартии КАК ДатаПартии,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон1 КАК Баллон1,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон2 КАК Баллон2,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон3 КАК Баллон3,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон4 КАК Баллон4,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон5 КАК Баллон5,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон6 КАК Баллон6,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон7 КАК Баллон7,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон8 КАК Баллон8,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон9 КАК Баллон9,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон10 КАК Баллон10,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон11 КАК Баллон11,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон13 КАК Баллон13,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон14 КАК Баллон14,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон15 КАК Баллон15,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон17 КАК Баллон17,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон18 КАК Баллон18,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон19 КАК Баллон19,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон20 КАК Баллон20,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон12 КАК Баллон12,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон16 КАК Баллон16,
	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка КАК Выпуск,
	|	ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон1 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон2 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон3 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон4 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон5 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон6 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон7 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон8 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон9 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон10 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон11 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон12 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон13 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон14 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон15 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон16 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон17 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон18 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон19 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ + ВЫБОР
	|		КОГДА МГС_ВыпускБаллоновПартииБаллоны.Баллон20 = ЗНАЧЕНИЕ(Справочник.МГС_Баллоны.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон1.ВесТары КАК Баллон1ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон2.ВесТары КАК Баллон2ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон3.ВесТары КАК Баллон3ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон4.ВесТары КАК Баллон4ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон5.ВесТары КАК Баллон5ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон6.ВесТары КАК Баллон6ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон7.ВесТары КАК Баллон7ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон8.ВесТары КАК Баллон8ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон9.ВесТары КАК Баллон9ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон10.ВесТары КАК Баллон10ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон11.ВесТары КАК Баллон11ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон12.ВесТары КАК Баллон12ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон13.ВесТары КАК Баллон13ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон14.ВесТары КАК Баллон14ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон15.ВесТары КАК Баллон15ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон16.ВесТары КАК Баллон16ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон17.ВесТары КАК Баллон17ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон18.ВесТары КАК Баллон18ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон19.ВесТары КАК Баллон19ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон20.ВесТары КАК Баллон20ВесТары,
	|	МГС_ВыпускБаллоновПартииБаллоны.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
	|ГДЕ
	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Выпуск,
	|	ОтветственныйЗаПартию";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	//Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	//Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ЭтоПервыйДокумент = Истина;
	ВыборкаВыпуск = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Пока ВыборкаВыпуск.Следующий() Цикл
		Если Не ЭтоПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(  ОбластьШапка.Параметры,ВыборкаВыпуск);
		ОбластьШапка.Параметры.Серия = ПолучитьНомерСерии(ВыборкаВыпуск.выпуск.ТипВыпуска,ВыборкаВыпуск.выпуск.Номер);
		ТабДок.Вывести(ОбластьШапка);
		ВыборкаОтветственныйЗаПартию = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаОтветственныйЗаПартию.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(  ОбластьОтветственный.Параметры,ВыборкаОтветственныйЗаПартию);
			ТабДок.Вывести(ОбластьОтветственный);
			ВыборкаДетальныеЗаписи = ВыборкаОтветственныйЗаПартию.Выбрать();	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				ЗаполнитьЗначенияСвойств(  ОбластьПартия.Параметры,ВыборкаДетальныеЗаписи);
				Для Н=1  По 20 Цикл
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи["Баллон"+н]) Тогда
						ДатаАттестации = ПолучитьДатуАттестации(ВыборкаДетальныеЗаписи["Баллон"+н],ВыборкаВыпуск.Выпуск.Дата) 	;
						 ОбластьПартия.Параметры["Аттестация"+Н] =	Формат(ДатаАттестации		,"ДФ='MM.yyyy'");
					
					КонецЕсли; 
					
				КонецЦикла; 
				
				ТабДок.Вывести(ОбластьПартия);
			КонецЦикла;
			ЗаполнитьЗначенияСвойств(  ОбластьПодпись.Параметры,ВыборкаОтветственныйЗаПартию);
			ТабДок.Вывести(ОбластьПодпись);
		КонецЦикла;
		ЭтоПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат ТабДок;
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Партия") или
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПартияРБ") или 
		УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПартияПЗА")Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Партия", "Партия _", 
		ПечатьПартия(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ВыпускБаллонов.Партия");
	КонецЕсли;
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоПартии")Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПоПартии", "Отчет по партии", 
	//	ОтчетПоПартии(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ВыпускБаллонов.ОтчетПоПартии");
	//КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоВыпуску")Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПоВыпуску", "Отчет по выпуску", 
		ОтчетПоВыпуску(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ВыпускБаллонов.ОтчетПоВыпуску");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	КоллекцияПечатныхФорм,
	ОбъектыПечати,
	ПараметрыВывода);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Партия
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Партия";
	КомандаПечати.Представление = НСтр("ru = 'Партия'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	//	// Отчет по партии
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ОтчетПоПартии";
	//КомандаПечати.Представление = НСтр("ru = 'Отчет по партии'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок = 10;
	
	// Отчет по выпуску
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетПоВыпуску";
	КомандаПечати.Представление = НСтр("ru = 'Отчет по выпуску'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	//// ПартияРБ
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПартияРБ";
	//КомандаПечати.Представление = НСтр("ru = 'Партия РБ'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок = 10;
	//
	//// ПартияПЗА
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПартияПЗА";
	//КомандаПечати.Представление = НСтр("ru = 'Партия ПЗА'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок = 10;
	
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Реализация (акт, накладная)""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

Функция РассчитатьБруттоБаллона(ВесТары,Нетто,Колпак,Кольца) Экспорт	
	Брутто = Нетто+ВесТары;
	Если Колпак =1 Тогда
		Брутто= Брутто+0.5
	иначе
		Брутто= Брутто+2.1
	КонецЕсли;	
	Если Кольца =1 Тогда
		Брутто= Брутто
	иначе
		Брутто= Брутто+0.6
	КонецЕсли;
	Возврат Брутто
КонецФункции

Функция ПолучитьНомерСерии(ТипВыпуска,НомерДокумента) Экспорт	
	Если ТипВыпуска = Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
		СерияПодготовка = Прав(НомерДокумента,6);
		Серия = Прав(СерияПодготовка,2)+Сред(СерияПодготовка,3,2)+Лев(СерияПодготовка,2)
	иначе
		Серия = Сред(Прав(НомерДокумента,6),3,2);
	КонецЕсли;
	
	Возврат Серия
КонецФункции

Функция РассчитатьНетто(ТипБаллона) Экспорт
	Нетто =ТипБаллона.ФактическаяВместимостьПоВоде;
	Возврат Нетто 
КонецФункции	

Функция ПолучитьДатуАттестации(Баллон,Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МГС_АттестацияБаллоновСрезПоследних.ДатаСледующейАттестации КАК ДатаСледующейАттестации
	|ИЗ
	|	РегистрСведений.МГС_АттестацияБаллонов.СрезПоследних(&Период, Баллон = &Баллон) КАК МГС_АттестацияБаллоновСрезПоследних";
	
	Запрос.УстановитьПараметр("Баллон", Баллон);
	Запрос.УстановитьПараметр("Период", Период);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Возврат  ВыборкаДетальныеЗаписи.ДатаСледующейАттестации
	КонецЦикла;
	
	Возврат '00010101000000'
	
КонецФункции

//Функция ОтчетПоПартии(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
//	
//	ТабДок = Новый ТабличныйДокумент;
//	ТабДок.АвтоМасштаб			= Истина;
//	ТабДок.ПолеСверху			= 10;
//	ТабДок.ПолеСнизу				= 10;
//	ТабДок.ПолеСправа			= 0;
//	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
//	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
//	
//	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
//	Макет = Документы.МГС_ВыпускБаллонов.ПолучитьМакет("ОтчетПоПартии");
//	Запрос = Новый Запрос;
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка КАК Ссылка,
//	|	МГС_ВыпускБаллоновПартииБаллоны.НомерСтроки КАК НомерСтроки,
//	|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии,
//	|	МГС_ВыпускБаллоновПартииБаллоны.ТипБаллона КАК ТипБаллона,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Закрыта КАК Закрыта,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес1 КАК Вес1,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес2 КАК Вес2,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес3 КАК Вес3,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес4 КАК Вес4,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес5 КАК Вес5,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес6 КАК Вес6,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес7 КАК Вес7,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес8 КАК Вес8,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес9 КАК Вес9,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес10 КАК Вес10,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес11 КАК Вес11,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес12 КАК Вес12,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес13 КАК Вес13,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес14 КАК Вес14,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес15 КАК Вес15,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес16 КАК Вес16,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес17 КАК Вес17,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес18 КАК Вес18,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес19 КАК Вес19,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Вес20 КАК Вес20,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон1 КАК Баллон1,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон2 КАК Баллон2,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон3 КАК Баллон3,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон4 КАК Баллон4,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон5 КАК Баллон5,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон6 КАК Баллон6,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон7 КАК Баллон7,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон8 КАК Баллон8,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон9 КАК Баллон9,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон10 КАК Баллон10,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон11 КАК Баллон11,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон12 КАК Баллон12,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон13 КАК Баллон13,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон14 КАК Баллон14,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон15 КАК Баллон15,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон16 КАК Баллон16,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон17 КАК Баллон17,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон18 КАК Баллон18,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон19 КАК Баллон19,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Баллон20 КАК Баллон20,
//	|	МГС_ВыпускБаллоновПартииБаллоны.ОтветственныйЗаПартию КАК ОтветственныйЗаПартию,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Колпак КАК Колпак,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Кольца КАК Кольца,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Номер КАК Номер,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Дата КАК Дата,
//	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Организация.НаименованиеСокращенное КАК Организация
//	|ИЗ
//	|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
//	|ГДЕ
//	|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка В(&Ссылка)
//	|	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ПометкаУдаления = ЛОЖЬ";
//	
//	//Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
//	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
//	Выборка = Запрос.Выполнить().Выбрать();
//	
//	// ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
//	// ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	// ОбластьДокументыОтгрузкиШапка = Макет.ПолучитьОбласть("ДокументыОтгрузкиШапка");
//	
//	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
//	
//	ТабДок.Очистить();
//	Добавка =1;
//	ВставлятьРазделительСтраниц = Ложь;
//	Пока Выборка.Следующий() Цикл
//		Если ВставлятьРазделительСтраниц Тогда
//			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
//		КонецЕсли;
//		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
//		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Выборка);
//		Для Н= 1 по 20 Цикл 
//			Если ЗначениеЗаполнено(Выборка["Баллон"+Н]) Тогда
//				Нетто = РассчитатьНетто(Выборка.ТипБаллона);
//				ВесТары = Выборка["Баллон"+Н].ВесТары;
//				Брутто = Нетто+ВесТары;		
//				Брутто =РассчитатьБруттоБаллона(ВесТары,Нетто,Выборка.Колпак,Выборка.Кольца);			
//				ОбластьСтрока.Параметры["Брутто"+н]=Брутто;
//				ОбластьСтрока.Параметры["ДатаСледующейАттестации"+н]=ПолучитьДатуАттестации(Выборка["Баллон"+Н],Выборка.Дата);
//			КонецЕсли;
//		КонецЦикла;
//		ТабДок.Вывести(ОбластьСтрока);
//		
//		
//		// ОбластьШапка.Параметры.Заполнить(Выборка);
//		// ОбластьШапка.Параметры.Организация = СокрЛП(Выборка.Организация.НаименованиеСокращенное);
//		// ОбластьШапка.Параметры.Контрагент = СокрЛП(Выборка.Контрагент.НаименованиеПолное);
//		// ТабДок.Вывести(ОбластьШапка, Выборка.Уровень());
//		
//		//// ТабДок.Вывести(ОбластьДокументыОтгрузкиШапка);
//		// ВыборкаНоменклатура = Выборка.ДокументыОтгрузки.Выбрать();
//		// Пока ВыборкаНоменклатура.Следующий() Цикл
//		//	 ОбластьСтрока.Параметры.Заполнить(ВыборкаНоменклатура);
//		//	 ТабДок.Вывести(ОбластьСтрока, ВыборкаНоменклатура.Уровень());
//		// КонецЦикла;
//		
//		// ОбластьПодвал.Параметры.Заполнить(Выборка);
//		// ДанныеФизЛицаМастер = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Выборка.Ссылка.Организация, Выборка.Ссылка.Мастер, Выборка.Ссылка.Дата);
//		// ОбластьПодвал.Параметры.МастерДолжность = ДанныеФизЛицаМастер.Должность;
//		// ОбластьПодвал.Параметры.Мастер =ДанныеФизЛицаМастер.Представление;
//		// ДанныеФизЛицаПриемосдатчик1 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Выборка.Ссылка.Организация, Выборка.Ссылка.Приемосдатчик1, Выборка.Ссылка.Дата);
//		// ОбластьПодвал.Параметры.Приемосдатчик1Должность = ДанныеФизЛицаПриемосдатчик1.Должность;
//		// ОбластьПодвал.Параметры.Приемосдатчик1 =ДанныеФизЛицаПриемосдатчик1.Представление;
//		// ТабДок.Вывести(ОбластьПодвал);
//		
//		// ВставлятьРазделительСтраниц = Истина;
//	КонецЦикла;
//	
//	Возврат ТабДок;
//КонецФункции
