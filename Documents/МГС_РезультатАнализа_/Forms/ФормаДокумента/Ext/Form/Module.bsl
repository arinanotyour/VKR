&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры


Функция ПолучитьСписокБаллонов(МассивБаллонов, Период)
	
	СписокБаллонов    =    Новый СписокЗначений;
	
	Запрос    =    Новый Запрос;
	Запрос.Текст    =    "ВЫБРАТЬ
	|	МГС_Баллоны.Ссылка КАК Ссылка,
	|	МГС_Баллоны.ВесТары КАК ВесТары
	|ПОМЕСТИТЬ Вт_Баллоны
	|ИЗ
	|	Справочник.МГС_Баллоны КАК МГС_Баллоны
	|ГДЕ
	|	МГС_Баллоны.Ссылка В (&МассивБаллонов);
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МГС_АттестацияБаллоновСрезПоследних.ДатаСледующейАттестации КАК ДатаСледующейАттестации,
	|	Вт_Баллоны.Ссылка КАК Ссылка,
	|	Вт_Баллоны.Ссылка.Наименование КАК Наименование,
	|	Вт_Баллоны.ВесТары КАК ВесТары
	|ИЗ
	|	Вт_Баллоны КАК Вт_Баллоны
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МГС_АттестацияБаллонов.СрезПоследних(&Период, ) КАК МГС_АттестацияБаллоновСрезПоследних
	|		ПО Вт_Баллоны.Ссылка = МГС_АттестацияБаллоновСрезПоследних.Баллон";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("МассивБаллонов", МассивБаллонов);   
	
	Выборка    =    Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл      
		 ПредставлениеБаллона    =    Выборка.Наименование+ " " +Выборка.ВесТары + " (" + Формат(Выборка.ДатаСледующейАттестации,"ДФ='MMMM yyyy'")  +")";	    
	    СписокБаллонов.Добавить(Выборка.Ссылка, 
	                            ПредставлениеБаллона);    
	КонецЦикла; 
							
				
	Возврат СписокБаллонов;
КонецФункции

&НаСервере
Функция ПолучитьБаллоныДляСертификации()
	МассивБаллонов = Новый Массив;
	Для каждого СтрокаПартииБаллоны из Объект.ДокументВыпуск.ПартииБаллоны  Цикл
		Если Объект.ДокументВыпуск.ТипВыпуска <>  Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("НомерПартии",СтрокаПартииБаллоны.НомерПартии);			
			Если  Объект.Партии.НайтиСтроки(СтруктураПоиска).количество() = 0   Тогда
				Продолжить			
			КонецЕсли; 		
		КонецЕсли; 
		
		Для н =1 по 20 Цикл 
			ТекБаллон = СтрокаПартииБаллоны["Баллон" +н];
			Если ЗначениеЗаполнено(ТекБаллон) Тогда
				МассивБаллонов.Добавить(ТекБаллон);
			КонецЕсли;
		КонецЦикла
	КонецЦикла;
	СписокБаллонов = ПолучитьСписокБаллонов(МассивБаллонов,объект.Дата);
	Возврат СписокБаллонов
КонецФункции

&НаСервере
Процедура УстановитьСписокВыбораБаллоновиВидРеквизитов()
	Элементы.СертификацияБаллон. СписокВыбора.Очистить();
	БаллоныДляСертификации = ПолучитьБаллоныДляСертификации();
	Для Каждого текБаллон из БаллоныДляСертификации Цикл
		Элементы.СертификацияБаллон. СписокВыбора. Добавить(текБаллон.Значение,текБаллон.Представление) 
	КонецЦикла;
	//Вставить содержимое обработчика
	Если Объект.ДокументВыпуск.ТипВыпуска =  Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
		Элементы.СертификацияНеконденсирующиесяГазы.Заголовок = "Неконденсирующиеся газы";
		Элементы.СертификацияОсновноеВещество.Видимость = Ложь;
		
		Элементы.СертификацияКислотность.Заголовок = "Кислотность соответствие";		
		Элементы.СертификацияКислотность. СписокВыбора.Очистить();
		Элементы.СертификацияКислотность.СписокВыбора.Добавить("Соответствует");
		Элементы.СертификацияКислотность.СписокВыбора.Добавить("Не соответствует");
		Элементы.СтрПартии.Видимость = Ложь;
	Иначе	
		Элементы.СертификацияНеконденсирующиесяГазы.Заголовок = "Сумма кислорода и азота";		
		Элементы.СертификацияОсновноеВещество.Видимость = Истина;
		
		Элементы.СертификацияКислотность.Заголовок = "Реакция";
		Элементы.СертификацияКислотность.СписокВыбора.Очистить();
		Элементы.СертификацияКислотность.СписокВыбора.Добавить("нейтральная");
		Элементы.СертификацияКислотность.СписокВыбора.Добавить("кислая");
		Элементы.СертификацияКислотность.СписокВыбора.Добавить("щелочная");
		Элементы.СтрПартии.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(параметры.ЗначениеКопирования) Тогда
		Отказ = истина;
		Возврат;		
	КонецЕсли; 
	
	Если Параметры.Ключ.Пустая() 
		и  ЗначениеЗаполнено( Объект.ДокументВыпуск)	Тогда

		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_РезультатАнализа.Выпуск КАК Выпуск,
		|	МГС_РезультатАнализа.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_Партии
		|ИЗ
		|	РегистрСведений.МГС_РезультатАнализа КАК МГС_РезультатАнализа
		|ГДЕ
		|	МГС_РезультатАнализа.Выпуск = &Выпуск
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии
		|ПОМЕСТИТЬ Вт_выпускБаллонов
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
		|ГДЕ
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка = &Выпуск
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вт_выпускБаллонов.НомерПартии КАК НомерПартии
		|ИЗ
		|	Вт_выпускБаллонов КАК Вт_выпускБаллонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Партии КАК ВТ_Партии
		|		ПО Вт_выпускБаллонов.НомерПартии = ВТ_Партии.Партия
		|ГДЕ
		|	ВТ_Партии.Партия ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПартии";
		
		
		
		//"ВЫБРАТЬ
		//|	МГС_РезультатАнализа.Ссылка КАК Ссылка
		//|ИЗ
		//|	Документ.МГС_РезультатАнализа КАК МГС_РезультатАнализа
		//|ГДЕ
		//|	МГС_РезультатАнализа.ДокументВыпуск = &ДокументВыпуск";
		
		Запрос.УстановитьПараметр("Выпуск", Объект.ДокументВыпуск);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если Не ВыборкаДетальныеЗаписи.Следующий() Тогда
			Отказ = Истина;
			Сообщить("По данному выпуску уже создан документ Результат анализа" ); 
			Возврат;
		КонецЕсли;	
		ЗаполнитьПереченьПартий();
	КонецЕсли;
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	УстановитьСписокВыбораБаллоновиВидРеквизитов();
	ОбновитьВидимостьЗакрытияОткрытияАнализа();
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеВыбораПоБаллонам(Текст,знач  спВыбора) Экспорт
   // спВыбора = ПолучитьБаллоныДляСертификации();
	
	
	УдаляемыеЭлементы = Новый Массив;
	Для каждого ЭлементСпискаВыбора из  спВыбора  Цикл
		Если ЭлементСпискаВыбора.Значение.Наименование <> Текст Тогда
			УдаляемыеЭлементы.Добавить(ЭлементСпискаВыбора);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого УдаляемыйЭлемент из  УдаляемыеЭлементы  Цикл
		спВыбора.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
    Возврат спВыбора;

КонецФункции // ПолучитьДанныеВыбораФИО()

&НаКлиенте
Процедура СертификацияБаллонАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		СтандартнаяОбработка = Ложь;
	Если СтрДлина(Текст) >= 3 Тогда
		ДанныеВыбора    =    ПолучитьДанныеВыбораПоБаллонам(Текст,Элементы.СертификацияБаллон. СписокВыбора);
		
	//	//Если ДанныеВыбора <> Неопределено Тогда
	//	//	
	//	//Иначе
	//	//	//Баллон1 = Текст;
	//	//КонецЕсли;	
	//		
	//	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПереченьПартий()
	Если Объект.ДокументВыпуск.ТипВыпуска =  Справочники.МГС_ТипыВыпускаБаллонов.Медицинский или Объект.Партии.Количество() =0 Тогда
		
		
		
		
		Объект.Партии.Очистить();
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_РезультатАнализа.Выпуск КАК Выпуск,
		|	МГС_РезультатАнализа.Партия КАК Партия
		|ПОМЕСТИТЬ ВТ_Партии
		|ИЗ
		|	РегистрСведений.МГС_РезультатАнализа КАК МГС_РезультатАнализа
		|ГДЕ
		|	МГС_РезультатАнализа.Регистратор <> &Регистратор
		|	И МГС_РезультатАнализа.Выпуск = &Выпуск
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Партии КАК ВТ_Партии
		|		ПО МГС_ВыпускБаллоновПартииБаллоны.НомерПартии = ВТ_Партии.Партия
		|ГДЕ
		|	ВТ_Партии.Выпуск ЕСТЬ NULL
		|	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка = &Выпуск
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПартии";
		
		Запрос.УстановитьПараметр("Выпуск", Объект.ДокументВыпуск);
		Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			НоваяСтрокаПартии = Объект.Партии.Добавить();
			НоваяСтрокаПартии.НомерПартии =ВыборкаДетальныеЗаписи.НомерПартии; 
		КонецЦикла;
	КонецЕсли; 
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура ДокументВыпускПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьПереченьПартий();
	УстановитьСписокВыбораБаллоновиВидРеквизитов()
КонецПроцедуры

&НаСервере
Функция ПоПартиямАнализаБылаОтгрузка()
	Если Не ЗначениеЗаполнено(Объект.ДокументВыпуск) Тогда
		Возврат Ложь	
	КонецЕсли; 
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МГС_ВыпускБаллонов.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.МГС_ВыпускБаллонов КАК МГС_ВыпускБаллонов
		|ГДЕ
		|	МГС_ВыпускБаллонов.Выпуск = &Выпуск
		|	И МГС_ВыпускБаллонов.Партия В(&Партии)
		|	И МГС_ВыпускБаллонов.Состояние = &Состояние";
	
	Запрос.УстановитьПараметр("Выпуск", Объект.ДокументВыпуск);
	Если Объект.ДокументВыпуск.ТипВыпуска = Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
		Партии = Объект.ДокументВыпуск.ПартииБаллоны.ВыгрузитьКолонку("НомерПартии")
	иначе 	
		Партии = Объект.Партии.Выгрузить().ВыгрузитьКолонку("НомерПартии")
	КонецЕсли; 
	Запрос.УстановитьПараметр("Партии", Партии);
	Запрос.УстановитьПараметр("Состояние", Перечисления.МГС_СостояниеБаллона.Отгружено);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Возврат Истина
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Возврат Ложь	
КонецФункции // ()


&НаСервере
Процедура ОбновитьВидимостьЗакрытияОткрытияАнализа()
	
	// Вставить содержимое обработчика.
	Если Объект.Проведен Тогда	
		
		Элементы.АнализОдобрен.Видимость = Ложь;
		//ЭтаФорма.ТолькоПросмотр = Истина;
		
		Для каждого Элемент из ЭтаФорма.Элементы Цикл
			Если Элемент. имя ="ГруппаСтандартныхКоманд"
			Или Элемент. имя ="ОткрытьАнализ"
			Или Элемент. имя ="КоманднаяПанельФормы"
			Или Элемент. имя ="ФормаКоманднаяПанель"
			Или СтрНайти(Элемент. имя,"Печат")>0
			Или СтрНайти(Элемент. имя,"СоздатьНаОсновании")>0
			или  ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
				Продолжить;
			КонецЕсли;
			Элемент.Доступность=Ложь
		КонецЦикла;
		Элементы.ОткрытьАнализ.Видимость = Истина;
		Элементы.ОткрытьАнализ.Доступность = Истина;
		ЭтаФорма.СтатусПоОтгрузке ="";
		//Элементы.СтатусПоОтгрузке.Заголовок ="";
		Если ПоПартиямАнализаБылаОтгрузка() Тогда
			Элементы.ОткрытьАнализ.Доступность = Ложь;			
			ЭтаФорма.СтатусПоОтгрузке  ="По анализу была отгрузка, открытие анализа невозможно";
		КонецЕсли; 
	Иначе
		Элементы.АнализОдобрен.Видимость = Истина;
		Для каждого Элемент из ЭтаФорма.Элементы Цикл
			Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
				Продолжить;
			КонецЕсли;
			Элемент.Доступность=Истина
		КонецЦикла;
		Элементы.ОткрытьАнализ.Видимость = Ложь;
		Элементы.ОткрытьАнализ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАнализ(Команда)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	ПараметрыЗаписи =Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения);
	Записать(ПараметрыЗаписи);
	ОбновитьВидимостьЗакрытияОткрытияАнализа();
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущегоПользователя()

	возврат ПараметрыСеанса.ТекущийПользователь

КонецФункции // ()

&НаКлиенте
Процедура АнализОдобрен(Команда)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.,
	Объект.ОтветственныйЗаАнализ = ПолучитьТекущегоПользователя();
	ПараметрыЗаписи =Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи",  РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	ОбновитьВидимостьЗакрытияОткрытияАнализа();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДокументВыпускНачалоВыбораИзСпискаНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ДокументВыпускНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ДокументВыпускНачалоВыбораИзСпискаНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораПоВыпускам(ДатаАнализа, ТекущийАнализ) Экспорт
    
	спВыбора    =    Новый СписокЗначений;
	
	
	Запрос    =    Новый Запрос;
	Запрос.Текст    =    "ВЫБРАТЬ
	                     |	МГС_ВыпускБаллоновПартииБаллоны.Ссылка КАК Ссылка,
	                     |	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии
	                     |ПОМЕСТИТЬ Вт_Выпуск
	                     |ИЗ
	                     |	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
	                     |ГДЕ
	                     |	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ПометкаУдаления = ЛОЖЬ
	                     |	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	МГС_РезультатАнализа.Выпуск КАК Выпуск,
	                     |	МГС_РезультатАнализа.Партия КАК Партия
	                     |ПОМЕСТИТЬ ВТ_анализ
	                     |ИЗ
	                     |	РегистрСведений.МГС_РезультатАнализа КАК МГС_РезультатАнализа
	                     |ГДЕ
	                     |	МГС_РезультатАнализа.Регистратор <> &Регистратор
	                     |	И МГС_РезультатАнализа.Выпуск В(Выбрать Вт_Выпуск.Ссылка из  Вт_Выпуск как Вт_Выпуск)
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	Вт_Выпуск.Ссылка КАК Ссылка
	                     |ИЗ
	                     |	Вт_Выпуск КАК Вт_Выпуск
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_анализ КАК ВТ_анализ
	                     |		ПО Вт_Выпуск.Ссылка = ВТ_анализ.Выпуск
	                     |			И Вт_Выпуск.НомерПартии = ВТ_анализ.Партия
	                     |ГДЕ
	                     |	ВТ_анализ.Выпуск ЕСТЬ NULL
	                     |ИТОГИ ПО
	                     |	Ссылка";
	                    
	Запрос.УстановитьПараметр("ДатаНачала", ДобавитьМесяц(ДатаАнализа,-1));
	Запрос.УстановитьПараметр("ДатаОкончания", ДобавитьМесяц(ДатаАнализа,1));    
	Запрос.УстановитьПараметр("Регистратор", ТекущийАнализ);  
	
	РезультатЗапроса    =    Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл      
	//    ПредставлениеБаллона    =    Выборка.Наименование+ " " +Выборка.ВесТары + " (" + Формат(Выборка.ДатаСледующейАттестации,"ДФ='MMMM yyyy'")  +")";	    
	    спВыбора.Добавить(Выборка.Ссылка);    	
	КонецЦикла; 
	 						
	Если спВыбора.Количество() = 0 Тогда
		спВыбора= Неопределено
	КонецЕсли;
    Возврат спВыбора;

КонецФункции // ПолучитьДанныеВыбораФИО()


&НаКлиенте
Процедура ДокументВыпускАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ДанныеВыбора =ПолучитьДанныеВыбораПоВыпускам(Объект.Дата,Объект.Ссылка);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура СертификацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.Сертификация.ТекущиеДанные;
		Если Элементы.СертификацияКислотность.Заголовок = "Кислотность соответствие" Тогда
			ТекущиеДанные.Кислотность = "Соответствует";
		иначе
			ТекущиеДанные.Кислотность = "нейтральная";
		КонецЕсли;
		ТекущиеДанные. Галогены = Истина;
		ТекущиеДанные.ДатаАнализа  = ПолучитьТекущаяДатаСеанса();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущаяДатаСеанса()
	возврат ТекущаяДатаСеанса()
КонецФункции

&НаКлиенте
Процедура СертификацияНеконденсирующиесяГазыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьОсновноеВещество()
КонецПроцедуры


&НаКлиенте
Процедура СертификацияВодяныеПарыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьОсновноеВещество()
КонецПроцедуры


&НаКлиенте
Процедура СертификацияОксидыАзотаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьОсновноеВещество()
КонецПроцедуры


&НаКлиенте
Процедура СертификацияСОПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьОсновноеВещество()
КонецПроцедуры


&НаКлиенте
Процедура СертификацияСО2ПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьОсновноеВещество()
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьОсновноеВещество()
	// Вставить содержимое обработчика.
	ТекущиеДанные = Элементы.Сертификация.ТекущиеДанные;
	ТекущиеДанные.ОсновноеВещество =Цел(( 100-ТекущиеДанные.НеконденсирующиесяГазы-ТекущиеДанные.ВодяныеПары-ТекущиеДанные.ОксидыАзота-ТекущиеДанные.СО-ТекущиеДанные.СО2)*100)/100;
//	ТекущиеДанные.ОсновноеВещество = 
КонецПроцедуры


&НаКлиенте
Процедура ПартииПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьСписокВыбораБаллоновиВидРеквизитов()
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Вставить содержимое обработчика.
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
КонецПроцедуры

