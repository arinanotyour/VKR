
//&НаКлиенте
//Процедура РеализацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	// Вставить содержимое обработчика.
//		// Вставить содержимое обработчика.
//		СтандартнаяОбработка = ложь;
//	ПараметрыФормы = новый Структура;
//	ПараметрыФормы.Вставить("ТекущаяОтгрузка",Объект.Ссылка);
//	ПараметрыФормы.Вставить("Контрагент",Объект.Контрагент);
//	ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.РасшМГС_ФормаВыбора",ПараметрыФормы);
//КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(параметры.ЗначениеКопирования) Тогда
		Отказ = истина;
		Возврат;		
	КонецЕсли; 
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Дата =ТекущаяДатаСеанса();		
	КонецЕсли;
	УстановитьСписокВыбораНоменклатуры();
	УстановитьВозможностьРедактированияНоменклатуры();
	ОбработатьФормуПриИзмененииРезервирования();
	ОбновитьКоличествоВыбранныхБаллонов();
	ОбновитьКнопкуНакладнойПоЖД();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПартийБаллонов(СостояниеБаллонов)
	
	//ДанныеСтроки 	= Объект.ПартииБаллоны.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
	// Вставить содержимое обработчика.
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Дата",               Объект.Дата);
	Выпуски = Новый Массив;
	Баллоны = Новый Массив;
	Партии = Новый Массив;
	
		Если СостояниеБаллонов = ПолучитьНужноеСостояниеБаллонов("Резервировано") Тогда
			ИмяТабличнойЧасти = "ПартииБаллоныРезервированные"
		иначе
			ИмяТабличнойЧасти = "ПартииБаллоны"
		КонецЕсли; 
		
	Для каждого СтрокаПартииБаллоны Из Объект[ИмяТабличнойЧасти] Цикл
		Выпуски.Добавить(СтрокаПартииБаллоны.Выпуск);
		Баллоны.Добавить(СтрокаПартииБаллоны.Баллон);
		Партии.Добавить(СтрокаПартииБаллоны.Партия);
	КонецЦикла;
	
	
	ПараметрыФормы.Вставить("Выпуски",            Выпуски);
	ПараметрыФормы.Вставить("Партии",            Партии);
	ПараметрыФормы.Вставить("Баллоны",            Баллоны);
	ПараметрыФормы.Вставить("Номенклатура",            Объект.Номенклатура);
	ПараметрыФормы.Вставить("КоличествоБаллоновВОтгрузке",            Объект.КоличествоБаллоновВОтгрузке);
	ПараметрыФормы.Вставить("СостояниеБаллонов",   СостояниеБаллонов);

	ОткрытьФорму("Документ.МГС_ОтгрузкаБаллонов.Форма.ФормаПартий", ПараметрыФормы,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНужноеСостояниеБаллонов(ТекстСостояния)
	Возврат Перечисления.МГС_СостояниеБаллона[ТекстСостояния]
КонецФункции // ()


&НаКлиенте
Процедура ПодборПартийБаллонов(Команда)
	// Вставить содержимое обработчика.
	ОткрытьФормуПартийБаллонов(ПолучитьНужноеСостояниеБаллонов("Выпущено"))
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВыбранноеЗначение.ПеренестиВДокумент Тогда
		УстановитьФормаМодифицированна();	
		Если ВыбранноеЗначение.СостояниеБаллонов = ПолучитьНужноеСостояниеБаллонов("Резервировано") Тогда
			ИмяТабличнойЧасти = "ПартииБаллоныРезервированные"
		иначе
			ИмяТабличнойЧасти = "ПартииБаллоны"
		КонецЕсли; 
		
		Объект[ИмяТабличнойЧасти].Очистить();
		
		Выпуски = ВыбранноеЗначение.Выпуски;
		Партии = ВыбранноеЗначение.Партии;
		Баллоны = ВыбранноеЗначение.Баллоны;
		
		Для н = 0 по Баллоны.Количество()-1 Цикл	
			СтрокаВыбранныеПартииБаллоны =  Объект[ИмяТабличнойЧасти] .Добавить();
			СтрокаВыбранныеПартииБаллоны.Выпуск =Выпуски[н];
			СтрокаВыбранныеПартииБаллоны.Партия =Партии[н];
			СтрокаВыбранныеПартииБаллоны.Баллон =Баллоны[н];
		КонецЦикла;
		УстановитьВозможностьРедактированияНоменклатуры();
		ОбновитьКоличествоВыбранныхБаллонов();
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФормаМодифицированна()
	ЭтаФорма.Модифицированность = Истина
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораНоменклатуры()
	Элементы.Номенклатура. СписокВыбора.Очистить();
	//НоменклатураДляВыбора = ПолучитьБаллоныДляСертификации();
	//Для Каждого текНоменклатура из НоменклатураДляВыбора Цикл
	ВыборкаМГС_ТипыВыпускаБаллонов = Справочники.МГС_ТипыВыпускаБаллонов.Выбрать();
	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	Пока ВыборкаМГС_ТипыВыпускаБаллонов.Следующий() Цикл
		Для каждого СтрокаВыпускаемаяПродукция Из ВыборкаМГС_ТипыВыпускаБаллонов.ВыпускаемаяПродукция Цикл
			СтрокаТаблицаНоменклатура = ТаблицаНоменклатуры.Добавить();
			СтрокаТаблицаНоменклатура.Номенклатура = СтрокаВыпускаемаяПродукция.Номенклатура;
		КонецЦикла;
	КонецЦикла;
	ТаблицаНоменклатуры.Свернуть("Номенклатура");
	Элементы.Номенклатура. СписокВыбора. ЗагрузитьЗначения(ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура")) 
	//КонецЦикла
	//Вставить содержимое обработчика
КонецПроцедуры

&НаСервере
Процедура УстановитьВозможностьРедактированияНоменклатуры()
	Если объект.ПартииБаллоны.Количество()>0 Тогда
		Элементы.Номенклатура.ТолькоПросмотр = Истина
	Иначе
		Элементы.Номенклатура.ТолькоПросмотр = Ложь
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РеализацияПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	Объект.Номенклатура = Объект.Реализация.Товары[0].Номенклатура;
	Объект.КоличествоБаллоновВОтгрузке = Объект.Реализация.Товары[0].Количество;
КонецПроцедуры

&НаКлиенте
Процедура РеализацияПриИзменении(Элемент)
	РеализацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормуПриИзмененииРезервирования()
	// Вставить содержимое обработчика.
	Если объект.ВидОтгрузки =2 Тогда
		Элементы.Контрагент.Видимость = Ложь;
		Элементы.Реализация.Видимость = Ложь;
		//Элементы.ТараСтр.Видимость = Ложь;
		Элементы.КоличествоБаллоновВОтгрузке.Видимость = Ложь; 
		Элементы.РезервированныеБаллоныСтр.Видимость = Ложь; 
	Иначе
		Элементы.Контрагент.Видимость = Истина;
		Элементы.Реализация.Видимость = Истина;
		//Элементы.ТараСтр.Видимость = Истина;
		Элементы.КоличествоБаллоновВОтгрузке.Видимость = Истина; 
		Элементы.РезервированныеБаллоныСтр.Видимость = Истина; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОтгрузкиПриИзменении(Элемент)
	Если объект.ВидОтгрузки =2 Тогда
		объект.Контрагент ="";
		объект.Реализация ="";
		объект.ПартииБаллоныРезервированные.Очистить();
	КонецЕсли; 
	ОбработатьФормуПриИзмененииРезервирования();
КонецПроцедуры

&НаКлиенте
Процедура ПодборРезервныхПартийБаллонов(Команда)
	// Вставить содержимое обработчика.
		ОткрытьФормуПартийБаллонов(ПолучитьНужноеСостояниеБаллонов("Резервировано"))
КонецПроцедуры


&НаСервере
Процедура ОбновитьКоличествоВыбранныхБаллонов()
	// Вставить содержимое обработчика.
	ВсегоВыбранно  = Объект.ПартииБаллоны.Количество()+ Объект.ПартииБаллоныРезервированные.Количество();
	Элементы.КоличествоБаллоновВыбрано.Заголовок = "Выбрано баллонов: "+ВсегоВыбранно;
КонецПроцедуры

&НаСервере
Функция ПолучитьНакладнуюЖД()
	
	Если  Объект.Ссылка.Пустая() Тогда
		Возврат Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка()	
	КонецЕсли;
	НакладнаяЖД = Документы.МГС_ОтгрузкаБаллонов.ПолучитьНакладнуюЖД( Объект.Ссылка );
	Возврат НакладнаяЖД

КонецФункции // ()

&НаСервере  
Функция ОбновитьКнопкуНакладнойПоЖД(НакладнаяЖД = Неопределено)
	Если НакладнаяЖД = Неопределено Тогда
		НакладнаяЖД =ПолучитьНакладнуюЖД();
	КонецЕсли; 
	
	Если НакладнаяЖД = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка()  Тогда
		Элементы.СоздатьНакладнуюЖД.Заголовок = "Создать накладную ж/д";
		Элементы.СоздатьНакладнуюЖД.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	иначе
		Элементы.СоздатьНакладнуюЖД.Заголовок = "Открыть накладную ж/д № "
		+ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(НакладнаяЖД.Номер, Истина, Ложь) + " от  "+НакладнаяЖД.Дата ;
		Элементы.СоздатьНакладнуюЖД.Вид = ВидКнопкиФормы.Гиперссылка;
	КонецЕсли; 

КонецФункции // ()
 

&НаСервере
Функция СоздатьПолучитьНакладнуюЖДНаСервере()
	// Вставить содержимое обработчика.
	Если Объект.Ссылка.Пустая()  Тогда
		Сообщить("Перед созданием накладной ж/д документ необходимо записать");
		Возврат Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка()	;	
	КонецЕсли; 
	НакладнаяЖД = ПолучитьНакладнуюЖД();
	Если  НакладнаяЖД = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка() Тогда
		НакладнаяЖД = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.СоздатьДокумент();	
		НакладнаяЖД.Заполнить(Объект.Ссылка);
		НакладнаяЖД.Записать();
	иначе
		Возврат НакладнаяЖД
	КонецЕсли; 
	
	 
КонецФункции

&НаКлиенте
Процедура СоздатьНакладнуюЖД(Команда)
	Если Объект.Ссылка.Пустая()  Тогда
		Сообщить("Перед созданием накладной ж/д документ необходимо записать");
		Возврат ;	
	КонецЕсли; 
	НакладнаяЖД = СоздатьПолучитьНакладнуюЖДНаСервере(); 
	 ОбновитьКнопкуНакладнойПоЖД(НакладнаяЖД);
	ОткрытьЗначение(НакладнаяЖД);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Вставить содержимое обработчика.
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.

	Объект.ДатаВозвратаТары =Документы.МГС_ОтгрузкаБаллонов.ПолучитьДатуВозвратаТары(   Объект.Реализация,Объект.Дата);

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
КонецПроцедуры



