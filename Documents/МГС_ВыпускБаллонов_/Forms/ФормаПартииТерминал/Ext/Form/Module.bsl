
&НаСервереБезконтекста
Функция ПолучитьДатуАттестации(Баллон,Период)

	Возврат Документы.МГС_ВыпускБаллонов.ПолучитьДатуАттестации(Баллон,Период);
	
КонецФункции

&НаСервере
Процедура УстановитьСписокВыбораНоменклатуры()
	Элементы.Номенклатура. СписокВыбора.Очистить();
	//НоменклатураДляВыбора = ПолучитьБаллоныДляСертификации();
	//Для Каждого текНоменклатура из НоменклатураДляВыбора Цикл

	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	
	Для каждого СтрокаВыпускаемаяПродукция Из ЭтаФорма.ТипВыпуска.ВыпускаемаяПродукция Цикл
		СтрокаТаблицаНоменклатура = ТаблицаНоменклатуры.Добавить();
		СтрокаТаблицаНоменклатура.Номенклатура = СтрокаВыпускаемаяПродукция.Номенклатура;
	КонецЦикла;

	ТаблицаНоменклатуры.Свернуть("Номенклатура");
	Элементы.Номенклатура. СписокВыбора. ЗагрузитьЗначения(ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура")) 
	//КонецЦикла
	//Вставить содержимое обработчика
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметры);	
	ПересчитатьСтрокиБрутто();
	ПеренестиВДокумент = Ложь;
	//Если ЭтаФорма.ТекущаяСтрока = ЭтаФорма.КоличествоСтрок Тогда
	//	Элементы.ПартияВперед.Доступность = Ложь;
	//КонецЕсли;
	Если ЭтаФорма.ТекущаяСтрока = 1 Тогда
		Элементы.ПартияНазад.Доступность = Ложь;
	КонецЕсли;
	
	УстановитьСписокВыбораНоменклатуры();
	Если РольДоступна("МГС_УчетБаллонов_Оператор") Тогда
		Элементы.ДатаПартии.ТолькоПросмотр = Истина;
		Элементы.НомерПартии.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ДатаПартии.ТолькоПросмотр = Ложь;
		Элементы.НомерПартии.ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
	Если Параметры.ТолькоПросмотр Тогда
		Для каждого Элемент из ЭтаФорма.Элементы Цикл
			Если  ТипЗнч(Элемент) = Тип("КнопкаФормы") и Элемент.имя = "ЗаписатьПартию" Тогда
				Элемент.Доступность=Ложь;
			Иначе
				Попытка
					Элемент.ТолькоПросмотр=Истина;			
				Исключение
					
				КонецПопытки;
			КонецЕсли;		
		КонецЦикла;
		Если ЭтаФорма.ТекущаяСтрока = ЭтаФорма.КоличествоСтрок Тогда
			Элементы.ПартияВперед.Доступность = Ложь;
		КонецЕсли;	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещенияПослеВопросаОСохраненииДанных(Результат, Параметры) Экспорт
	
	Если 	Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли	Результат = КодВозвратаДиалога.Нет Тогда
		этаФорма.Модифицированность = ложь;
		Закрыть();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Если этаФорма.Модифицированность и Не ПеренестиВДокумент Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещенияПослеВопросаОСохраненииДанных", ЭтотОбъект, Отказ);			
		ПоказатьВопрос(ОписаниеОповещения, "Данные партии были изменены. Сохранить данные?", РежимДиалогаВопрос.ДаНетОтмена,0);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруРезультатПартии(НомерБаллона =0)
	СтруктураРезультат = Новый Структура();
	СтруктураРезультат.Вставить("НомерПартии", НомерПартии);
	СтруктураРезультат.Вставить("ТипБаллона",               ТипБаллона);
	СтруктураРезультат.Вставить("ОтветственныйЗаПартию",               ОтветственныйЗаПартию);
	СтруктураРезультат.Вставить("Закрыта",               Закрыта);
	СтруктураРезультат.Вставить("Колпак",               Колпак);
	СтруктураРезультат.Вставить("Кольца",               Кольца);
	
	Для Н =1 По 20 Цикл
		Если НомерБаллона =0 или Н=НомерБаллона Тогда
			СтруктураРезультат.Вставить("Баллон"+Н,               ЭтаФорма["Баллон"+Н]);
		Иначе
			СтруктураРезультат.Вставить("Баллон"+Н,              Неопределено);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураРезультат.Вставить("НажатаяКнопка",НажатаяКнопка);
	СтруктураРезультат.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	СтруктураРезультат.Вставить("ПеренестиВДокумент",ПеренестиВДокумент);
	СтруктураРезультат.Вставить("ДатаПартии",ДатаПартии);
	СтруктураРезультат.Вставить("ТипВыпуска",               ТипВыпуска);
	СтруктураРезультат.Вставить("Номер",               Номер);
	СтруктураРезультат.Вставить("Дата",               Дата);
	СтруктураРезультат.Вставить("Номенклатура",               Номенклатура);
	Возврат СтруктураРезультат
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Вставить содержимое обработчика
		СтруктураРезультат = ПолучитьСтруктуруРезультатПартии();
	//Если ПеренестиВДокумент Тогда		
		// Вставить содержимое обработчика.
		
		ОповеститьОВыборе(СтруктураРезультат);
//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПартию(Команда)
	// Вставить содержимое обработчика.
	НажатаяКнопка="ЗаписатьПартию";
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаСервереБезконтекста
Функция ЭтоМедицинскийВыпуск(Тип)
	Если Тип = Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
		Возврат Истина
	Иначе
		Возврат Ложь
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура БаллоныБаллонПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	//Баллоны.Количество()
	ТекущиеДанные = Элементы.БаллоныПраво.ТекущиеДанные;
	ТекущаяСтрока = Элементы.БаллоныПраво.ТекущаяСтрока;
	ТекущиеДанные.ДатаАттестации = ПолучитьДатуАттестации(ТекущиеДанные.Баллон, дата);
	ТекущиеДанные.НомерСтроки = Баллоны.Количество(); 
КонецПроцедуры

&НаКлиенте
Процедура БаллоныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
	Если Баллоны.Количество()>= 20 Тогда
			ПоказатьПредупреждение(,"Количество строк превышает 20 " );	
			Отказ = Истина
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбораПоБаллонам(Текст, Период, ТипБаллона) Экспорт
    
	спВыбора    =    Новый СписокЗначений;
	
	Текст = СтрЗаменить(Текст," ","");
	
	Запрос    =    Новый Запрос;
	Запрос.Текст    =    "ВЫБРАТЬ
	                     |	МГС_Баллоны.Ссылка КАК Ссылка,
	                     |	МГС_Баллоны.ВесТары КАК ВесТары
	                     |ПОМЕСТИТЬ Вт_Баллоны
	                     |ИЗ
	                     |	Справочник.МГС_Баллоны КАК МГС_Баллоны
	                     |ГДЕ
	                     |	МГС_Баллоны.Наименование ПОДОБНО &Наименование
	                     |	И МГС_Баллоны.ТипБаллона = &ТипБаллона
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	МГС_АттестацияБаллоновСрезПоследних.ДатаСледующейАттестации КАК ДатаСледующейАттестации,
	                     |	Вт_Баллоны.Ссылка КАК Ссылка,
	                     |	Вт_Баллоны.Ссылка.Наименование КАК Наименование,
	                     |	Вт_Баллоны.ВесТары КАК ВесТары
	                     |ИЗ
	                     |	Вт_Баллоны КАК Вт_Баллоны
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МГС_АттестацияБаллонов.СрезПоследних(
	                     |				&Период,
	                     |				Баллон В
	                     |					(ВЫБРАТЬ
	                     |						Вт_Баллоны.Ссылка
	                     |					ИЗ
	                     |						Вт_Баллоны КАК Вт_Баллоны)) КАК МГС_АттестацияБаллоновСрезПоследних
	                     |		ПО Вт_Баллоны.Ссылка = МГС_АттестацияБаллоновСрезПоследних.Баллон
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МГС_ВыпускБаллонов.СрезПоследних(
	                     |				&Период,
	                     |				Баллон В
	                     |					(ВЫБРАТЬ
	                     |						Вт_Баллоны.Ссылка
	                     |					ИЗ
	                     |						Вт_Баллоны КАК Вт_Баллоны)) КАК МГС_ВыпускБаллоновСрезПоследних
	                     |		ПО Вт_Баллоны.Ссылка = МГС_ВыпускБаллоновСрезПоследних.Баллон
	                     |ГДЕ
	                     |	(МГС_ВыпускБаллоновСрезПоследних.Баллон ЕСТЬ NULL
	                     |			ИЛИ МГС_ВыпускБаллоновСрезПоследних.Состояние <> ЗНАЧЕНИЕ(Перечисление.МГС_СостояниеБаллона.выпущено))";
	                    
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Наименование", Текст);    
	Запрос.УстановитьПараметр("ТипБаллона", ТипБаллона);   
	Выборка    =    Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл      
	    ПредставлениеБаллона    =    Выборка.Наименование+ " " +Выборка.ВесТары + " (" + Формат(Выборка.ДатаСледующейАттестации,"ДФ='MMMM yyyy'")  +")";	    
	    спВыбора.Добавить(Выборка.Ссылка, 
	                            ПредставлениеБаллона);    	
	КонецЦикла; 
	спВыбора.Добавить(Текст,  "...ввести новый баллон...");    						
	Если спВыбора.Количество() = 0 Тогда
		спВыбора= Неопределено
	КонецЕсли;
    Возврат спВыбора;

КонецФункции // ПолучитьДанныеВыбораФИО()



&НаКлиенте
Процедура БаллонОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	УстановитьФормаМодифицированна();	
	ДанныеВыбора    =    ПолучитьДанныеВыбораПоБаллонам(Текст, Дата, этаформа.ТипБаллона);
	Если ДанныеВыбора <> Неопределено Тогда			
		СтандартнаяОбработка = Ложь;
	иначе
		НомерБаллонаВПартии = Сред(Элемент.Имя,7);
		ЭтаФорма["Баллон"+НомерБаллонаВПартии] =Текст ;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция РассчитатьБрутто(ВесТары)
	Нетто =Документы.МГС_ВыпускБаллонов.РассчитатьНетто(ТипБаллона);
	Брутто =Документы.МГС_ВыпускБаллонов.РассчитатьБруттоБаллона(ВесТары,Нетто,Колпак,Кольца);
	Возврат Брутто
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияПоБалллону(Баллон, ВесТары, Брутто,ДатаСледующейАттестации)
	ВесТары= Баллон.ВесТары;
	Брутто = РассчитатьБрутто(ВесТары);
	ДатаСледующейАттестации = ПолучитьДатуАттестации(Баллон, дата);
КонецПроцедуры

&Насервере
Процедура ОбработатьВидСтроки(Баллон,НомерБаллонаВПартии)
	Если Не ТипЗнч(Баллон) = Тип("Строка") Тогда	
		Элементы["ВесТары"+НомерБаллонаВПартии].Доступность = ложь;
		Элементы["Брутто"+НомерБаллонаВПартии].Доступность = ложь;
		Элементы["ДатаСледующейАттестации"+НомерБаллонаВПартии].Доступность = ложь;
		НомерСледующегоБаллонаВПартии = Число(НомерБаллонаВПартии)+1;
		ЭтаФорма["Баллон"+НомерБаллонаВПартии] =Баллон ;
		Если НомерСледующегоБаллонаВПартии<=20 Тогда
			ЭтаФорма.ТекущийЭлемент = Элементы["Баллон"+НомерСледующегоБаллонаВПартии];	
		иначе
			ЭтаФорма.ТекущийЭлемент = Элементы.ЗаписатьПартию;
		КонецЕсли;
	Иначе
		Элементы["ВесТары"+НомерБаллонаВПартии].Доступность = Истина;
		Элементы["Брутто"+НомерБаллонаВПартии].Доступность = Истина;
		Элементы["ДатаСледующейАттестации"+НомерБаллонаВПартии].Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ТакогоБаллонаВВыпускеНет(ТекБаллон, ТекИмяБаллона)
	ТакогоБаллонаВВыпускеНет = Истина;
	Если ЭтаФорма.СписокБаллоновВыпуска.НайтиПоЗначению(ТекБаллон)<> Неопределено Тогда
		ТакогоБаллонаВВыпускеНет = Ложь;
		Возврат ТакогоБаллонаВВыпускеНет
	КонецЕсли;
	
	Для Н=1 По 20 Цикл
		ИмяБаллона = "Баллон"+Н;
		Если ИмяБаллона = ТекИмяБаллона Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭтаФорма[ИмяБаллона] = ТекБаллон Тогда
			ТакогоБаллонаВВыпускеНет = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТакогоБаллонаВВыпускеНет; 
КонецФункции

&НаСервереБезКонтекста
Функция ПустаяСсылкаБаллона()
	возврат Справочники.МГС_Баллоны.ПустаяСсылка()
КонецФункции

&НаКлиенте
Процедура БаллонОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	НомерБаллонаВПартии = Сред(Элемент.Имя,7);
	Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда	
		Если ТакогоБаллонаВВыпускеНет(ВыбранноеЗначение,Элемент.Имя) Тогда
			ЗаполнитьЗначенияПоБалллону(ВыбранноеЗначение,ЭтаФорма["ВесТары"+НомерБаллонаВПартии],ЭтаФорма["Брутто"+НомерБаллонаВПартии],ЭтаФорма["ДатаСледующейАттестации"+НомерБаллонаВПартии]);
		иначе
			ВыбранноеЗначение = ПустаяСсылкаБаллона();
			ПоказатьПредупреждение(,"Данный баллон уже выбран в выпуске"); 
		КонецЕсли;			
	Иначе
		ЭтаФорма["Баллон"+НомерБаллонаВПартии] = ВыбранноеЗначение;
	КонецЕсли;
	ОбработатьВидСтроки(ВыбранноеЗначение,НомерБаллонаВПартии);
	СтандартнаяОбработка = ложь;
	УстановитьФормаМодифицированна();
	
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьНовыйЭлементСправочникаНаСервере(БаллонЧисло, ВесТары, Брутто,ДатаСледующейАттестации)
	БаллонТекст = Формат(БаллонЧисло,"ЧГ=0");
	// Вставить содержимое обработчика.
	ЭлементСправочникаБаллонов = Справочники.МГС_Баллоны.СоздатьЭлемент();
	ЭлементСправочникаБаллонов.ВесТары = ВесТары;
	ЭлементСправочникаБаллонов.Наименование =БаллонТекст;
	ЭлементСправочникаБаллонов.ТипБаллона = ТипБаллона;
	ЭлементСправочникаБаллонов.Записать();
	СсылкаЭлементСправочникаБаллонов = ЭлементСправочникаБаллонов.Ссылка;
	
	Запись = РегистрыСведений.МГС_АттестацияБаллонов.СоздатьМенеджерЗаписи();
	Запись.Период = Дата;
	Запись.Баллон = СсылкаЭлементСправочникаБаллонов;
	Запись.ДатаСледующейАттестации =ДатаСледующейАттестации ;
	Запись.Записать(Истина);
	
	Возврат СсылкаЭлементСправочникаБаллонов; 
КонецФункции

&НаКлиенте
Процедура ДатаСледующейАттестацииПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	НомерБаллонаВПартии = Сред(Элемент.Имя,24);
	НовыйБаллон = ЗаписатьНовыйЭлементСправочникаНаСервере(ЭтаФорма["Баллон"+НомерБаллонаВПартии],ЭтаФорма["ВесТары"+НомерБаллонаВПартии],ЭтаФорма["Брутто"+НомерБаллонаВПартии],ЭтаФорма["ДатаСледующейАттестации"+НомерБаллонаВПартии]);
	ЗаполнитьЗначенияПоБалллону(НовыйБаллон,ЭтаФорма["ВесТары"+НомерБаллонаВПартии],ЭтаФорма["Брутто"+НомерБаллонаВПартии],ЭтаФорма["ДатаСледующейАттестации"+НомерБаллонаВПартии]);
	УстановитьФормаМодифицированна();
	ОбработатьВидСтроки(НовыйБаллон,НомерБаллонаВПартии);
	
КонецПроцедуры

&НаКлиенте
Процедура ВесТарыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	НомерБаллонаВПартии = Сред(Элемент.Имя,8);
	ЭтаФорма["Брутто"+НомерБаллонаВПартии] = РассчитатьБрутто(ЭтаФорма["ВесТары"+НомерБаллонаВПартии]);
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСтрокиБрутто()
	// Вставить содержимое обработчика.
	Для НомерБаллонаВПартии=1 По 20 Цикл
		Если ЗначениеЗаполнено(ЭтаФорма["Баллон"+НомерБаллонаВПартии]) Тогда
			ЗаполнитьЗначенияПоБалллону(ЭтаФорма["Баллон"+НомерБаллонаВПартии],ЭтаФорма["ВесТары"+НомерБаллонаВПартии],ЭтаФорма["Брутто"+НомерБаллонаВПартии],ЭтаФорма["ДатаСледующейАттестации"+НомерБаллонаВПартии]);
			ОбработатьВидСтроки(ЭтаФорма["Баллон"+НомерБаллонаВПартии],НомерБаллонаВПартии)
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КолпакПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьСтрокиБрутто();
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура КольцаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПересчитатьСтрокиБрутто();
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура ОповещенияПослеВопросаСоздатьНовуюПартию(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		НажатаяКнопка="СоздатьНовуюСтроку";
		Закрыть();
	ИначеЕсли	Результат = КодВозвратаДиалога.Нет Тогда
		НажатаяКнопка="";
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПартияВперед(Команда)
	// Вставить содержимое обработчика.
	//ПеренестиВДокумент = Истина;
	НажатаяКнопка="ПартияВперед";
	Если ЭтаФорма.ТекущаяСтрока = ЭтаФорма.КоличествоСтрок Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещенияПослеВопросаСоздатьНовуюПартию", ЭтотОбъект);			
		ПоказатьВопрос(ОписаниеОповещения, "Создать новую партию?", РежимДиалогаВопрос.ДаНет,0);
	Иначе
		Закрыть();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПартияНазад(Команда)
	// Вставить содержимое обработчика.
//		ПеренестиВДокумент = Истина;
	НажатаяКнопка="ПартияНазад";
	Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьМГС_ВыпускБаллоновПустаяСсылка()
	Возврат Документы.МГС_ВыпускБаллонов.ПустаяСсылка()
КонецФункции

&НаКлиенте
Процедура ПечатьПартии(Команда)
	// Вставить содержимое обработчика.
	//ПеренестиВДокумент = Истина;
	//НажатаяКнопка="ПечатьПартии";
	//Закрыть();
	СтруктураРезультат = ПолучитьСтруктуруРезультатПартии();
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ПолучитьМГС_ВыпускБаллоновПустаяСсылка());
	МассивОбъектов.Добавить(СтруктураРезультат);
    УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.МГС_ВыпускБаллонов", "Партия",МассивОбъектов,ЭтаФорма);
	//ТабДок =ПечатьПартииНаСервере(СтруктураРезультат);
	//ТабДок.показать()
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФормаМодифицированна()
	ЭтаФорма.Модифицированность = Истина
КонецПроцедуры

&НаКлиенте
Процедура ТипБаллонаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйЗаПартиюПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПартииПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	Если ЭтаФорма.ТекстПредупреждения <> "" Тогда
		ПоказатьПредупреждение(,ЭтаФорма.ТекстПредупреждения ); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БаллонИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
//	СтандартнаяОбработка = ложь
	// Вставить содержимое обработчика.
КонецПроцедуры

//&НаКлиенте
//Процедура Этикетка(Команда)	
//	НомерБаллонаВПартии = Число(Сред(Команда.Имя,9));
//	// Вставить содержимое обработчика.
//	СтруктураРезультат = ПолучитьСтруктуруРезультатПартии(НомерБаллонаВПартии);
//	МассивОбъектов = Новый Массив;
//	МассивОбъектов.Добавить(ПолучитьМГС_ВыпускБаллоновПустаяСсылка());
//	МассивОбъектов.Добавить(СтруктураРезультат);
//	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.МГС_ВыпускБаллонов", "Партия",МассивОбъектов,ЭтаФорма);
//КонецПроцедуры

&НаКлиенте
Процедура ПечатьБаллона(Команда)
	// Вставить содержимое обработчика.
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеПослеВопросаПечатьБаллона", ЭтотОбъект);	
	ПереченьБаллоновДляпечати = Новый СписокЗначений;
	Для н =1 По 20 Цикл
		ПереченьБаллоновДляпечати.Добавить(Н)
	КонецЦикла;
	//ПоказатьВопрос(ОписаниеОповещения, "Выберите номер баллона (от 1 до 20)!", ПереченьБаллоновДляпечати,0);
	 	
	ПоказатьВыборИзСписка(ОписаниеОповещения,ПереченьБаллоновДляпечати,Элементы.ПечатьБаллона)
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПослеВопросаПечатьБаллона(Результат, Параметры) Экспорт
	
	НомерБаллонаВПартии = Результат.Значение;
	// Вставить содержимое обработчика.
	СтруктураРезультат = ПолучитьСтруктуруРезультатПартии(НомерБаллонаВПартии);
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ПолучитьМГС_ВыпускБаллоновПустаяСсылка());
	МассивОбъектов.Добавить(СтруктураРезультат);
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.МГС_ВыпускБаллонов", "Партия",МассивОбъектов,ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Функция ПолучитьТипБаллонаПоНоменклатуре()
	возврат Документы.МГС_ОтгрузкаБаллонов.ПолучитьТипБаллонаПоНоменклатуре(ЭтаФорма.Номенклатура)
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЭтаФорма.ТипБаллона =ПолучитьТипБаллонаПоНоменклатуре();
	УстановитьФормаМодифицированна();
КонецПроцедуры

&НаКлиенте
Процедура БаллонАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ДанныеВыбора    =    ПолучитьДанныеВыбораПоБаллонам(Текст, Дата, этаформа.ТипБаллона);
	Если ДанныеВыбора <> Неопределено Тогда			
		СтандартнаяОбработка = Ложь;
	иначе
		НомерБаллонаВПартии = Сред(Элемент.Имя,7);
		ЭтаФорма["Баллон"+НомерБаллонаВПартии] =Текст ;
	КонецЕсли;
КонецПроцедуры





