
&НаСервере
Процедура  ЗаполнитьТаблицуВыбранныеПартииБаллоны(Выпуски,Партии,Баллоны)
	
	Для н = 0 по Баллоны.Количество()-1 Цикл	
		СтрокаВыбранныеПартииБаллоны =  ВыбранныеПартииБаллоны .Добавить();
		СтрокаВыбранныеПартииБаллоны.Выпуск =Выпуски[н];
		СтрокаВыбранныеПартииБаллоны.Партия =Партии[н];
		СтрокаВыбранныеПартииБаллоны.Баллон =Баллоны[н];
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Выпуски = Параметры.Выпуски;
	Партии = Параметры.Партии;
	Баллоны = Параметры.Баллоны;
	Дата =  Параметры.Дата;
	Номенклатура = Параметры.Номенклатура;
	КоличествоБаллоновВОтгрузке = Параметры.КоличествоБаллоновВОтгрузке;
	СостояниеБаллонов =  Параметры.СостояниеБаллонов;
	//ТипВыпуска = Документы.МГС_ОтгрузкаБаллонов.ПолучитьТипВыпускаПоНоменклатуре( Параметры.Номенклатура);
	//ТипБаллона = Документы.МГС_ОтгрузкаБаллонов.ПолучитьТипБаллонаПоНоменклатуре( Параметры.Номенклатура);
	ЗаполнитьТаблицуВыбранныеПартииБаллоны(Выпуски,Партии,Баллоны);
	ЗаполнитьПереченьПартийБаллонов()
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПереченьПартийБаллонов()
	//Вставить содержимое обработчика
	Период = Дата;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	
	
	ДеревоПартииБаллоны= Новый ДеревоЗначений;
	ДеревоПартииБаллоны.Колонки.Добавить("Баллон");
	ДеревоПартииБаллоны.Колонки.Добавить("Партия");
	ДеревоПартииБаллоны.Колонки.Добавить("Выпуск");
	ДеревоПартииБаллоны.Колонки.Добавить("Метка");
	ДеревоПартииБаллоны.Колонки.Добавить("Количество");
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МГС_ВыпускБаллоновСрезПоследних.Период КАК Период,
	|	МГС_ВыпускБаллоновСрезПоследних.Баллон КАК Баллон,
	|	МГС_ВыпускБаллоновСрезПоследних.Партия КАК Партия,
	|	МГС_ВыпускБаллоновСрезПоследних.Выпуск КАК Выпуск,
	|	МГС_ВыпускБаллоновСрезПоследних.Состояние КАК Состояние
	|ПОМЕСТИТЬ ВтБаллоны
	|ИЗ
	|	РегистрСведений.МГС_ВыпускБаллонов.СрезПоследних(, ) КАК МГС_ВыпускБаллоновСрезПоследних
	|ГДЕ
	|	МГС_ВыпускБаллоновСрезПоследних.Состояние = &Состояние
	|	И МГС_ВыпускБаллоновСрезПоследних.Номенклатура = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтБаллоны.Период КАК Период,
	|	ВтБаллоны.Баллон КАК Баллон,
	|	ВтБаллоны.Партия КАК Партия,
	|	ВтБаллоны.Выпуск КАК Выпуск,
	|	ВтБаллоны.Состояние КАК Состояние
	|ИЗ
	|	ВтБаллоны КАК ВтБаллоны
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МГС_РезультатАнализа КАК МГС_РезультатАнализа
	|		ПО ВтБаллоны.Выпуск = МГС_РезультатАнализа.Выпуск
	|			И ВтБаллоны.Партия = МГС_РезультатАнализа.Партия
	|ГДЕ
	|	НЕ МГС_РезультатАнализа.Выпуск ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Выпуск,
	|	Партия,
	|	Баллон
	|ИТОГИ ПО
	|	Выпуск,
	|	Партия";
	
	
	//Если ТипВыпуска =  Справочники.МГС_ТипыВыпускаБаллонов.ПустаяСсылка() Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"МГС_ВыпускБаллоновСрезПоследних.Выпуск.ТипВыпуска = &ТипВыпуска",
	//	"МГС_ВыпускБаллоновСрезПоследних.Выпуск.ТипВыпуска <> &ТипВыпуска");
	//КонецЕсли;	
	//
	//Если ТипБаллона =  Справочники.МГС_ТипыБаллонов.ПустаяСсылка() Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"МГС_ВыпускБаллоновСрезПоследних.Баллон.ТипБаллона = &ТипБаллона",
	//	"МГС_ВыпускБаллоновСрезПоследних.Баллон.ТипБаллона <> &ТипБаллона");
	//КонецЕсли;	
	
	Запрос = Новый Запрос;	
	Запрос.Текст = ТекстЗапроса;
//	Запрос.УстановитьПараметр("Период",   Период-1);
	Запрос.УстановитьПараметр("ТипВыпуска", ТипВыпуска);
	Запрос.УстановитьПараметр("ТипБаллона", ТипБаллона);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Состояние", СостояниеБаллонов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВыпуск = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаВыпуск.Следующий() Цикл
		// Вставить обработку выборки ВыборкаВыпуск
		
		ВыборкаПартия = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПартия.Следующий() Цикл
			// Вставить обработку выборки ВыборкаПартия
			СтрокаВыпускПартия  =  ДеревоПартииБаллоны.Строки.Добавить();			
			СтрокаВыпускПартия.Выпуск = ВыборкаПартия. Выпуск;
			СтрокаВыпускПартия.Партия = ВыборкаПартия.Партия;
			СтрокаВыпускПартия.Метка =0;
			
			КоличествоВПартии = 0;
			ВыборкаДетальныеЗаписи = ВыборкаПартия.Выбрать();	
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				СтрокаБаллон  =  СтрокаВыпускПартия.Строки.Добавить();			
				СтрокаБаллон.Баллон = ВыборкаДетальныеЗаписи. Баллон;
				//СтрокаВыпускПартия.Выпуск = ВыборкаПартия. Выпуск;
				//СтрокаВыпускПартия.Партия = ВыборкаПартия.Партия;
				СтрокаБаллон.Количество =1;
				
				ОтборСтрок = Новый Структура;
				ОтборСтрок.Вставить("Выпуск",СтрокаВыпускПартия.Выпуск);
				ОтборСтрок.Вставить("Партия",СтрокаВыпускПартия.Партия);
				ОтборСтрок.Вставить("Баллон",СтрокаБаллон.Баллон);				
				НайденныеСтроки = ВыбранныеПартииБаллоны.НайтиСтроки(ОтборСтрок);
				Если НайденныеСтроки.Количество() > 0 Тогда
					СтрокаБаллон.Метка =1;
				Иначе
					СтрокаБаллон.Метка =0;
				КонецЕсли;
				
				КоличествоВПартии = КоличествоВПартии +1;
			КонецЦикла;
			СтрокаВыпускПартия.Количество =КоличествоВПартии;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтрокаВыпускПартия  Из  ДеревоПартииБаллоны.Строки Цикл
		НачальноеЗначениеМетки = "";
		ЕстьРазличия = ложь;
		Для каждого СтрокаБаллон  Из  СтрокаВыпускПартия.Строки Цикл
			Если НачальноеЗначениеМетки = "" Тогда
				НачальноеЗначениеМетки = СтрокаБаллон.Метка;
			КонецЕсли;
			Если НачальноеЗначениеМетки <> СтрокаБаллон.Метка Тогда
				ЕстьРазличия = Истина;
				Прервать
			КонецЕсли;
		КонецЦикла;
		Если ЕстьРазличия  Тогда
			СтрокаВыпускПартия.Метка = 2;
		иначе
			СтрокаВыпускПартия.Метка = НачальноеЗначениеМетки;
		КонецЕсли
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоПартииБаллоны, "ПартииБаллоны");	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	ПосчитатьКоличествоВыбранныхБаллонов();
КонецПроцедуры

&НаКлиенте
Процедура ПартииБаллоныМеткаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ТекущиеДанные =Элементы.ПартииБаллоны.ТекущиеДанные;
	ТекущийБаллон = ТекущиеДанные.Баллон;
	НужнаяСтрока = Элементы.ПартииБаллоны.ТекущаяСтрока;
	Если ТекущиеДанные.Метка = 2 Тогда
		ТекущиеДанные.Метка = 0 
	КонецЕсли;	
	Если ЗначениеЗаполнено(ТекущийБаллон) Тогда	
		ЕстьРазличия = ложь;
		
		НужнаяСтрока =НужнаяСтрока+1;
		ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
		Если ДанныеПартииБаллоны = Неопределено Тогда
			ТекущийБаллон = ""; 			
		иначе
			ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
		КонецЕсли;			
		
		Пока ЗначениеЗаполнено(ТекущийБаллон) Цикл
			Если ДанныеПартииБаллоны.Метка <>  ТекущиеДанные.Метка Тогда
				ЕстьРазличия = Истина
			КонецЕсли;
			
			//ПартииБаллоны.
			НужнаяСтрока =НужнаяСтрока+1;
			ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
			Если ДанныеПартииБаллоны = Неопределено Тогда 
				Прервать
			КонецЕсли;
			ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
			
		КонецЦикла;
		
		НужнаяСтрока =НужнаяСтрока-1;
		ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
		ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
		Пока ЗначениеЗаполнено(ТекущийБаллон) Цикл
			Если ДанныеПартииБаллоны.Метка <>  ТекущиеДанные.Метка Тогда
				ЕстьРазличия = Истина
			КонецЕсли;
			//ПартииБаллоны.
			НужнаяСтрока =НужнаяСтрока-1;
			ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
			ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
			
		КонецЦикла;
		Если ЕстьРазличия  Тогда
			ДанныеПартииБаллоны.Метка = 2;
		иначе
			ДанныеПартииБаллоны.Метка = ТекущиеДанные.Метка;
		КонецЕсли
	Иначе
		НужнаяСтрока =НужнаяСтрока+1;
		ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
		ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
		Пока ЗначениеЗаполнено(ТекущийБаллон) Цикл
			ДанныеПартииБаллоны.Метка = ТекущиеДанные.Метка;
			//ПартииБаллоны.
			НужнаяСтрока =НужнаяСтрока+1;
			ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
			Если ДанныеПартииБаллоны = Неопределено Тогда 
				Прервать
			КонецЕсли;
			ТекущийБаллон = ДанныеПартииБаллоны.Баллон;
		КонецЦикла;
	КонецЕсли;
	ПосчитатьКоличествоВыбранныхБаллонов();	
КонецПроцедуры

&НаКлиенте
Процедура ТипВыпускаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьПереченьПартийБаллонов()
КонецПроцедуры

&НаКлиенте
Процедура ТипБаллонаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ЗаполнитьПереченьПартийБаллонов()
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуВыбранныеПартииБаллоны()
	ВыбранныеПартииБаллоны.Очистить();
	ДеревоПартииБаллоны =РеквизитФормыВЗначение("ПартииБаллоны");
	Для каждого СтрокаВыпускПартия  Из  ДеревоПартииБаллоны.Строки Цикл
		Для каждого СтрокаБаллон  Из  СтрокаВыпускПартия.Строки Цикл		
			Если  СтрокаБаллон.Метка =1 Тогда
				СтрокаВыбранныеПартииБаллоны = ВыбранныеПартииБаллоны.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаВыбранныеПартииБаллоны,СтрокаБаллон);
				СтрокаВыбранныеПартииБаллоны.Выпуск =СтрокаВыпускПартия.Выпуск ;
				СтрокаВыбранныеПартииБаллоны.Партия =СтрокаВыпускПартия.Партия ;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПеренстиВДокумент(Команда)
	ПеренестиВДокумент = Истина;
	ОбновитьТаблицуВыбранныеПартииБаллоны();
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	// Вставить содержимое обработчика.
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	//Вставить содержимое обработчика
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("ПеренестиВДокумент",ПеренестиВДокумент);
	
	Выпуски = Новый Массив;
	Баллоны = Новый Массив;
	Партии = Новый Массив;
	Для каждого СтрокаПартииБаллоны Из ВыбранныеПартииБаллоны Цикл
		Выпуски.Добавить(СтрокаПартииБаллоны.Выпуск);
		Баллоны.Добавить(СтрокаПартииБаллоны.Баллон);
		Партии.Добавить(СтрокаПартииБаллоны.Партия);
	КонецЦикла;
	
	
	СтруктураРезультат.Вставить("Выпуски",            Выпуски);
	СтруктураРезультат.Вставить("Партии",            Партии);
	СтруктураРезультат.Вставить("Баллоны",            Баллоны);
	СтруктураРезультат.Вставить("СостояниеБаллонов",            СостояниеБаллонов);
	
	//Если ПеренестиВДокумент Тогда		
	// Вставить содержимое обработчика.
	
	ОповеститьОВыборе(СтруктураРезультат);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоматическиПоКоличеству(Команда)
	
	КоличествоБаллоновОсталось = ЭтаФорма.КоличествоБаллоновВОтгрузке;
	//	ТекущиеДанные =Элементы.ПартииБаллоны.ТекущиеДанные;
	//ТекущийБаллон = ТекущиеДанные.Баллон;
	НужнаяСтрока = 0;
	ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);	
	ДанныеПартииБаллоныГруппа = "";
	МеткаПервойПозициц ="";
	ЕстьРазличия = Ложь;	
	// Вставить содержимое обработчика.
	Пока ДанныеПартииБаллоны <> Неопределено Цикл
		
		Если ЗначениеЗаполнено(ДанныеПартииБаллоны.Баллон) Тогда
			
			Если   КоличествоБаллоновОсталось > 0 Тогда			
				ДанныеПартииБаллоны.Метка =1;	
				КоличествоБаллоновОсталось=КоличествоБаллоновОсталось-1;
			иначе
				ДанныеПартииБаллоны.Метка =0;	
			КонецЕсли; 						
			Если МеткаПервойПозициц ="" Тогда
				МеткаПервойПозициц = ДанныеПартииБаллоны.Метка;	
			Иначе
				Если МеткаПервойПозициц<>ДанныеПартииБаллоны.Метка Тогда
					ЕстьРазличия = Истина;				
				КонецЕсли;
				МеткаПервойПозициц = ДанныеПартииБаллоны.Метка;	
			КонецЕсли; 
		Иначе
			Если ДанныеПартииБаллоныГруппа<>"" Тогда
				Если ЕстьРазличия Тогда
					ДанныеПартииБаллоныГруппа.Метка =2;					
				иначе
					ДанныеПартииБаллоныГруппа.Метка =МеткаПервойПозициц;		
				КонецЕсли; 			
			КонецЕсли; 
			ДанныеПартииБаллоныГруппа =ДанныеПартииБаллоны; 
			МеткаПервойПозициц ="";
			ЕстьРазличия = Ложь;
		КонецЕсли; 	
		НужнаяСтрока =НужнаяСтрока+1;
		ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);	
	КонецЦикла; 
	
	Если ДанныеПартииБаллоныГруппа<>"" Тогда
		Если ЕстьРазличия Тогда
			ДанныеПартииБаллоныГруппа.Метка =2;					
		иначе
			ДанныеПартииБаллоныГруппа.Метка =МеткаПервойПозициц;		
		КонецЕсли; 			
	КонецЕсли; 
	ПосчитатьКоличествоВыбранныхБаллонов();
КонецПроцедуры

Процедура ПосчитатьКоличествоВыбранныхБаллонов()
	помеченоБаллонов = 0;
	НужнаяСтрока = 1;
	ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);
	Пока ДанныеПартииБаллоны <> Неопределено Цикл
		Если ЗначениеЗаполнено(ДанныеПартииБаллоны.Баллон) и  ДанныеПартииБаллоны.Метка =1 Тогда
			помеченоБаллонов=помеченоБаллонов+1			
		КонецЕсли; 
		НужнаяСтрока =НужнаяСтрока+1;
		ДанныеПартииБаллоны = ПартииБаллоны.НайтиПоИдентификатору(НужнаяСтрока);	
	КонецЦикла; 
	ВыбраноБаллонов = помеченоБаллонов
КонецПроцедуры


