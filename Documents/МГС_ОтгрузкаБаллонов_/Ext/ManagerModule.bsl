
Функция ПечатьСертификат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 10;
	ТабДок.ПолеСнизу			= 10;
	ТабДок.ПолеСправа			= 10;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабДок.Очистить();
	
	Макет = Документы.МГС_ОтгрузкаБаллонов.ПолучитьМакет("Сертификат");
	
	Для каждого ТекущаяОтгрузка Из  МассивОбъектов Цикл
		ТабДокСертификат = Новый ТабличныйДокумент;
		
		ТипОтгрузки = ПолучитьТипОтгрузкиПоНоменклатуре(ТекущаяОтгрузка. Номенклатура) ; 
		Если ТипОтгрузки =  "Медицинский" Тогда
			Если ТекущаяОтгрузка.Контрагент.СтранаРегистрации= Справочники.СтраныМира.НайтиПоНаименованию("БЕЛАРУСЬ") Тогда
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка_МЗА_РБ");
				ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияМЗА_РБ");
			Иначе
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка_МЗА");
				ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияМЗА");			
			КонецЕсли;
		ИначеЕсли ТипОтгрузки =  "Технический" Тогда	
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка_ТЗА");
			ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияТЗА");
		Иначе  	
			ОбластьШапка = Макет.ПолучитьОбласть("Шапка_ПЗА");
			ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияПЗА");
		КонецЕсли;
		
		//	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьСерияПартия = Макет.ПолучитьОбласть("СерияПартия");
		//	ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребования");
		
		
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Выпуск КАК Выпуск
		|ПОМЕСТИТЬ Вт_Выпуски
		|ИЗ
		|	Документ.МГС_ОтгрузкаБаллонов.ПартииБаллоны КАК МГС_ОтгрузкаБаллоновПартииБаллоны
		|ГДЕ
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МГС_РезультатАнализаСертификация.Ссылка КАК Ссылка,
		|	МГС_РезультатАнализаСертификация.НомерСтроки КАК НомерСтроки,
		|	МГС_РезультатАнализаСертификация.Баллон КАК Баллон,
		|	МГС_РезультатАнализаСертификация.НеконденсирующиесяГазы КАК НеконденсирующиесяГазы,
		|	МГС_РезультатАнализаСертификация.ВодяныеПары КАК ВодяныеПары,
		|	МГС_РезультатАнализаСертификация.ОксидыАзота КАК ОксидыАзота,
		|	МГС_РезультатАнализаСертификация.СО КАК СО,
		|	МГС_РезультатАнализаСертификация.СО2 КАК СО2,
		|	МГС_РезультатАнализаСертификация.Галогены КАК Галогены,
		|	МГС_РезультатАнализаСертификация.Кислотность КАК Кислотность,
		|	МГС_РезультатАнализаСертификация.ОсновноеВещество КАК ОсновноеВещество,
		|	МГС_РезультатАнализаСертификация.Ссылка.Дата КАК ДатаАнализа
		|ИЗ
		|	Вт_Выпуски КАК Вт_Выпуски
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МГС_РезультатАнализа.Сертификация КАК МГС_РезультатАнализаСертификация
		|		ПО Вт_Выпуски.Выпуск = МГС_РезультатАнализаСертификация.Ссылка.ДокументВыпуск
		|ГДЕ
		|	НЕ МГС_РезультатАнализаСертификация.Ссылка ЕСТЬ NULL";
		
		
		Запрос.Параметры.Вставить("Ссылка", ТекущаяОтгрузка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		
		ОбластьШапка.Параметры.номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
		
		ТабДокСертификат.Вывести(ОбластьШапка);
		
		
		ЗапросБаллоны = Новый Запрос;
		ЗапросБаллоны.Текст = 
		"ВЫБРАТЬ
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.НомерСтроки КАК НомерСтроки,
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Выпуск КАК Выпуск,
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Партия КАК Партия,
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Баллон КАК Баллон
		|ИЗ
		|	Документ.МГС_ОтгрузкаБаллонов.ПартииБаллоны КАК МГС_ОтгрузкаБаллоновПартииБаллоны
		|ГДЕ
		|	МГС_ОтгрузкаБаллоновПартииБаллоны.Ссылка = &Ссылка
		|ИТОГИ ПО
		|	Выпуск,
		|	Партия";
		
		ЗапросБаллоны.УстановитьПараметр("Ссылка", ТекущаяОтгрузка);
		
		РезультатЗапросаБаллоны = ЗапросБаллоны.Выполнить();
		
		ВыборкаВыпуск = РезультатЗапросаБаллоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ТекущаяСерияПартии ="";
		ТекстПартии = "";
		Пока ВыборкаВыпуск.Следующий() Цикл
			// Вставить обработку выборки ВыборкаВыпуск
			СерияПартии = Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии( ВыборкаВыпуск.Выпуск.ТипВыпуска,ВыборкаВыпуск.Выпуск.Номер);
			Если  СерияПартии<> ТекущаяСерияПартии Тогда 				
				Если ТекущаяСерияПартии <>"" Тогда
					Если СтрЗаканчиваетсяНа(ТекстПартии,", ") Тогда			
						ТекстПартии = Лев(ТекстПартии,СтрДлина(ТекстПартии)-2);
					КонецЕсли;	
					ОбластьСерияПартия.Параметры.Серия =ТекущаяСерияПартии;
					ОбластьСерияПартия.Параметры.ТекстПартии =ТекстПартии;
					ТабДокСертификат.Вывести(ОбластьСерияПартия);				
				КонецЕсли;
				ТекстПартии = "";
				ТекущаяСерияПартии = СерияПартии;
			КонецЕсли;
			
			ВыборкаПартия = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПартия.Следующий() Цикл
				ТекстПоБаллонам = "";
				КоличествоБаллоновВПартии = 0;
				ВыборкаДетальная = ВыборкаПартия.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);				
				Пока ВыборкаДетальная.Следующий() Цикл
					КоличествоБаллоновВПартии=КоличествоБаллоновВПартии+1
				КонецЦикла;
				//Если КоличествоБаллоновВПартии<>20 Тогда
				//	ТекстПоБаллонам = "("+Строка(КоличествоБаллоновВПартии)+")"			
				//КонецЕсли;
				ТекстПартии = ТекстПартии+Строка(ВыборкаПартия.Партия)+ТекстПоБаллонам+", ";
			КонецЦикла;
	
			
		КонецЦикла;
		Если ТекущаяСерияПартии <>"" Тогда
			Если СтрЗаканчиваетсяНа(ТекстПартии,", ") Тогда			
				ТекстПартии = Лев(ТекстПартии,СтрДлина(ТекстПартии)-2);
			КонецЕсли;	
			ОбластьСерияПартия.Параметры.Серия =ТекущаяСерияПартии;
			ОбластьСерияПартия.Параметры.ТекстПартии =ТекстПартии;
			ТабДокСертификат.Вывести(ОбластьСерияПартия);				
		КонецЕсли;
		
		//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		Кислотность	="";	
		ОксидыАзота	=  0;	
		СО2		=  0;		
		СО		=  0;	
		НеконденсирующиесяГазы		=  0;	
		ВодяныеПары			=  0;
		Галогены =истина;		
		ОсновноеВещество = 100;
		ВставлятьРазделительСтраниц = Ложь;
		ДатаАнализаНачало = '22220101000000';
		ДатаАнализаКонец = '00010101000000';
		Пока Выборка.Следующий() Цикл
			
			Если Кислотность = ""	Тогда
				Кислотность = Выборка.Кислотность;
			ИначеЕсли Выборка.Кислотность <> "соответствует"
				и Выборка.Кислотность <> "Соответствует"
				и Выборка.Кислотность <> "нейтральная" 	Тогда
				Кислотность = Выборка.Кислотность;
			КонецЕсли;			
			Если Выборка.ОксидыАзота > ОксидыАзота Тогда
				ОксидыАзота = Выборка.ОксидыАзота;
			КонецЕсли;			
			Если Выборка.СО2 > СО2 Тогда
				СО2 = Выборка.СО2;
			КонецЕсли;			
			Если Выборка.СО > СО Тогда
				СО = Выборка.СО;
			КонецЕсли;			
			Если Выборка.НеконденсирующиесяГазы > НеконденсирующиесяГазы Тогда
				НеконденсирующиесяГазы = Выборка.НеконденсирующиесяГазы;
			КонецЕсли;			
			Если Выборка.ВодяныеПары > ВодяныеПары Тогда
				ВодяныеПары = Выборка.ВодяныеПары;
			КонецЕсли;		
			Если Не Выборка.Галогены Тогда
				Галогены = Ложь;
			КонецЕсли;		
			
			Если Выборка.ОсновноеВещество < ОсновноеВещество Тогда
				ОсновноеВещество = Выборка.ОсновноеВещество;
			КонецЕсли;	
			
			Если Выборка.ДатаАнализа>ДатаАнализаКонец  Тогда
				ДатаАнализаКонец = НачалоДня(Выборка.ДатаАнализа)
			КонецЕсли;	
			
			Если Выборка.ДатаАнализа<ДатаАнализаНачало  Тогда
				ДатаАнализаНачало = НачалоДня(Выборка.ДатаАнализа)
			КонецЕсли;	
			
		КонецЦикла;
		
		Если Кислотность = "соответствует" Тогда
			Кислотность =  "Соответствует"		
		КонецЕсли; 
		
		ОбластьТехническиеТребования.Параметры.ОксидыАзота = ОксидыАзота;
		ОбластьТехническиеТребования.Параметры.СО2 = СО2;
		ОбластьТехническиеТребования.Параметры.СО = СО;
		ОбластьТехническиеТребования.Параметры.НеконденсирующиесяГазы = НеконденсирующиесяГазы;
		ОбластьТехническиеТребования.Параметры.ВодяныеПары = ВодяныеПары;
		ОбластьТехническиеТребования.Параметры.Кислотность = Кислотность;
		
		//Если Кислотность Тогда 
		//	ОбластьТехническиеТребования.Параметры.Кислотность = "Соответствует"
		//иначе
		//	ОбластьТехническиеТребования.Параметры.Кислотность = "Не соответствует"
		//КонецЕсли;
		
		Если Галогены Тогда 
			ОбластьТехническиеТребования.Параметры.Галогены = "Отсутствие опалесценции"
		иначе
			ОбластьТехническиеТребования.Параметры.Галогены = "Появление опалесценции"
		КонецЕсли;
		
		Если ОксидыАзота = 0.00001 Тогда 
			ОбластьТехническиеТребования.Параметры.ОксидыАзота = "<0.00001"
		КонецЕсли;
		Если СО = 0.0001 Тогда 
			ОбластьТехническиеТребования.Параметры.СО = "<0.0001"
		КонецЕсли;		
		Если СО2 <= 0 Тогда 
			ОбластьТехническиеТребования.Параметры.СО2 =  "отсутствие мути"
		КонецЕсли;		
		
		Если НеконденсирующиесяГазы <= 0.05 Тогда 
			ОбластьТехническиеТребования.Параметры.НеконденсирующиесяГазы =  "<0.05"
		КонецЕсли;
		
		Если ВодяныеПары <= 0.0011 Тогда 
			ОбластьТехническиеТребования.Параметры.ВодяныеПары =  "<0.0011"
		КонецЕсли;
		
		Если ТипОтгрузки <>   "Медицинский" Тогда
			
			ОбластьТехническиеТребования.Параметры.ОсновноеВещество = ОсновноеВещество;
			Если ОсновноеВещество < 100 Тогда 
				ОбластьТехническиеТребования.Параметры.ОсновноеВещество = ">" +Строка(ОсновноеВещество); 
			КонецЕсли;	
		КонецЕсли;	
		КоличествоБаллонов = ТекущаяОтгрузка.ПартииБаллоны.Количество();		
		ОбластьТехническиеТребования.Параметры.КоличествоБаллонов = КоличествоБаллонов;
		
		Если ДатаАнализаНачало = ДатаАнализаКонец Тогда 
			ТекстДатаАнализа = Формат(ДатаАнализаНачало,"ДФ=dd.MM.yyyy")
		иначе
			ТекстДатаАнализа = Формат(ДатаАнализаНачало,"ДФ=dd.MM.yyyy")+"-"+Формат(ДатаАнализаКонец,"ДФ=dd.MM.yyyy")
		КонецЕсли;	
		ОбластьТехническиеТребования.Параметры.ТекстДатаАнализа =ТекстДатаАнализа;		
		ТабДокСертификат.Вывести(ОбластьТехническиеТребования);
		
		ОбластьПодвал =  Макет.ПолучитьОбласть("Подвал");
		ДанныеПодписант1 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант1, Текущаяотгрузка.Дата);
		ОбластьПодвал.Параметры.ФИОПодписант1 =      ДанныеПодписант1.Представление;
		//	ОбластьПодвал.Параметры.ДолжностьПодписант1 = ДанныеПодписант1.Должность;
		
		//ДанныеПодписант2 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант2, Текущаяотгрузка.Дата);
		//ОбластьПодвал.Параметры.ФИОПодписант2 =      ДанныеПодписант2.Представление;
		//ОбластьПодвал.Параметры.ДолжностьПодписант2 = ДанныеПодписант2.Должность;
		//
		//ДанныеПодписант3 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант3, Текущаяотгрузка.Дата);
		//ОбластьПодвал.Параметры.ФИОПодписант3	=      ДанныеПодписант3.Представление;
		//ОбластьПодвал.Параметры.ДолжностьПодписант3 = ДанныеПодписант3.Должность;
		
		ОбластьПодвал.Параметры.Дата = Формат(Текущаяотгрузка.Дата,"ДФ='dd MMMM yyyy'");
		ТабДокСертификат.Вывести(ОбластьПодвал);
		ТабДок.Вывести(ТабДокСертификат);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьШапкаСертификат = Макет.ПолучитьОбласть("ШапкаСертификат");
		ОбластьШапкаСертификат.Параметры.Номер =ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
		ОбластьШапкаСертификат.Параметры.КоличествоБаллонов =КоличествоБаллонов;
		ТабДок.Вывести(ОбластьШапкаСертификат);
		НужноВывестиСертификат = Ложь;
		НуженНовыйЛистДляСерии = Ложь;

		НомерПартииНаЛисте = 1;
		ВыборкаВыпуск = РезультатЗапросаБаллоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыборкаВыпуск.Следующий() Цикл			
			ВыборкаПартия = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
			Если НуженНовыйЛистДляСерии Тогда
			     ТабДок.ВывестиГоризонтальныйРазделительСтраниц(); 			
			 КонецЕсли;
			 
			СерияПартии = Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии( ВыборкаВыпуск.Выпуск.ТипВыпуска,ВыборкаВыпуск.Выпуск.Номер); 
			ОбластьСерияПриложения = Макет.ПолучитьОбласть("СерияПриложения");
			ОбластьСерияПриложения.Параметры.Серия =СерияПартии;
			ТабДок.Вывести(ОбластьСерияПриложения);

			Пока ВыборкаПартия.Следующий() Цикл
				ОбластьПартия = Макет.ПолучитьОбласть("Партия");
				// Вставить обработку выборки ВыборкаВыпуск
				ОбластьПартия.Параметры.Партия =ВыборкаПартия.Партия;
				// Вставить обработку выборки ВыборкаПартия
				НомерБаллона = 1;
				ВыборкаДетальныеЗаписи = ВыборкаПартия.Выбрать();				//
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					ОбластьПартия.Параметры["Баллон"+НомерБаллона] = ВыборкаДетальныеЗаписи.Баллон;
					НомерБаллона = НомерБаллона+1;
				КонецЦикла;
				//Если НужноВывестиСертификат Тогда				
				//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				//	ТабДок.Вывести(ТабДокСертификат);
				//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				//	ТабДок.Вывести(ОбластьШапкаСертификат);
				//	НужноВывестиСертификат = Ложь;
				//КонецЕсли; 
				ТабДок.Вывести(ОбластьПартия);
				НомерПартииНаЛисте = НомерПартииНаЛисте+1;
				Если НомерПартииНаЛисте >10 тогда
					НужноВывестиСертификат = Истина;
					НомерПартииНаЛисте =1;
				КонецЕсли;	
			КонецЦикла;
			НуженНовыйЛистДляСерии = Истина;
			
		КонецЦикла;
		
		
		
		//пошла печать резервирования
		
		Если Текущаяотгрузка.ПартииБаллоныРезервированные.Количество() >0  Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
			ТабДокСертификат = Новый ТабличныйДокумент;
			ТипОтгрузки = ПолучитьТипОтгрузкиПоНоменклатуре(ТекущаяОтгрузка. Номенклатура) ; 
			Если ТипОтгрузки =  "Медицинский" Тогда
				Если ТекущаяОтгрузка.Контрагент.СтранаРегистрации= Справочники.СтраныМира.НайтиПоНаименованию("БЕЛАРУСЬ") Тогда
					ОбластьШапка = Макет.ПолучитьОбласть("Шапка_МЗА_РБ");
					ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияМЗА_РБ");
				Иначе
					ОбластьШапка = Макет.ПолучитьОбласть("Шапка_МЗА");
					ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияМЗА");			
				КонецЕсли;
			ИначеЕсли ТипОтгрузки =  "Технический" Тогда	
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка_ТЗА");
				ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияТЗА");
			Иначе  	
				ОбластьШапка = Макет.ПолучитьОбласть("Шапка_ПЗА");
				ОбластьТехническиеТребования = Макет.ПолучитьОбласть("ТехническиеТребованияПЗА");
			КонецЕсли;
			
			//	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьСерияПартия = Макет.ПолучитьОбласть("СерияПартия");
			
			
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Выпуск КАК Выпуск
			|ПОМЕСТИТЬ Вт_Выпуски
			|ИЗ
			|	Документ.МГС_ОтгрузкаБаллонов.ПартииБаллоныРезервированные КАК МГС_ОтгрузкаБаллоновПартииБаллоны
			|ГДЕ
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МГС_РезультатАнализаСертификация.Ссылка КАК Ссылка,
			|	МГС_РезультатАнализаСертификация.НомерСтроки КАК НомерСтроки,
			|	МГС_РезультатАнализаСертификация.Баллон КАК Баллон,
			|	МГС_РезультатАнализаСертификация.НеконденсирующиесяГазы КАК НеконденсирующиесяГазы,
			|	МГС_РезультатАнализаСертификация.ВодяныеПары КАК ВодяныеПары,
			|	МГС_РезультатАнализаСертификация.ОксидыАзота КАК ОксидыАзота,
			|	МГС_РезультатАнализаСертификация.СО КАК СО,
			|	МГС_РезультатАнализаСертификация.СО2 КАК СО2,
			|	МГС_РезультатАнализаСертификация.Галогены КАК Галогены,
			|	МГС_РезультатАнализаСертификация.Кислотность КАК Кислотность,
			|	МГС_РезультатАнализаСертификация.ОсновноеВещество КАК ОсновноеВещество,
			|	МГС_РезультатАнализаСертификация.Ссылка.Дата КАК ДатаАнализа
			|ИЗ
			|	Вт_Выпуски КАК Вт_Выпуски
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МГС_РезультатАнализа.Сертификация КАК МГС_РезультатАнализаСертификация
			|		ПО Вт_Выпуски.Выпуск = МГС_РезультатАнализаСертификация.Ссылка.ДокументВыпуск
			|ГДЕ
			|	НЕ МГС_РезультатАнализаСертификация.Ссылка ЕСТЬ NULL";
			
			
			Запрос.Параметры.Вставить("Ссылка", ТекущаяОтгрузка);
			Выборка = Запрос.Выполнить().Выбрать();
			
			
			ОбластьШапка.Параметры.номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
			
			ТабДокСертификат.Вывести(ОбластьШапка);
			
			
			ЗапросБаллоны = Новый Запрос;
			ЗапросБаллоны.Текст = 
			"ВЫБРАТЬ
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.НомерСтроки КАК НомерСтроки,
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Выпуск КАК Выпуск,
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Партия КАК Партия,
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Баллон КАК Баллон
			|ИЗ
			|	Документ.МГС_ОтгрузкаБаллонов.ПартииБаллоныРезервированные КАК МГС_ОтгрузкаБаллоновПартииБаллоны
			|ГДЕ
			|	МГС_ОтгрузкаБаллоновПартииБаллоны.Ссылка = &Ссылка
			|ИТОГИ ПО
			|	Выпуск,
			|	Партия";
			
			ЗапросБаллоны.УстановитьПараметр("Ссылка", ТекущаяОтгрузка);
			
			РезультатЗапросаБаллоны = ЗапросБаллоны.Выполнить();
			
			ВыборкаВыпуск = РезультатЗапросаБаллоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаВыпуск.Следующий() Цикл
				// Вставить обработку выборки ВыборкаВыпуск
				ОбластьСерияПартия.Параметры.Серия = Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии( ВыборкаВыпуск.Выпуск.ТипВыпуска,ВыборкаВыпуск.Выпуск.Номер);
				ТекстПартии = "";
				ВыборкаПартия = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПартия.Следующий() Цикл
					ТекстПартии = ТекстПартии+Строка(ВыборкаПартия.Партия)+", ";
					// Вставить обработку выборки ВыборкаПартия
					
					//		ВыборкаДетальныеЗаписи = ВыборкаПартия.Выбрать();
					//
					//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					//			// Вставить обработку выборки ВыборкаДетальныеЗаписи
					//		КонецЦикла;
				КонецЦикла;
				Если СтрЗаканчиваетсяНа(ТекстПартии,", ") Тогда			
					ТекстПартии = Лев(ТекстПартии,СтрДлина(ТекстПартии)-2);
				КонецЕсли;	
				ОбластьСерияПартия.Параметры.ТекстПартии =ТекстПартии;
				ТабДокСертификат.Вывести(ОбластьСерияПартия);
			КонецЦикла;
			
			
			//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			Кислотность	="";	
			ОксидыАзота	=  0;	
			СО2		=  0;		
			СО		=  0;	
			НеконденсирующиесяГазы		=  0;	
			ВодяныеПары			=  0;
			Галогены =истина;		
			ОсновноеВещество = 100;
			ВставлятьРазделительСтраниц = Ложь;
			ДатаАнализаНачало = '22220101000000';
			ДатаАнализаКонец = '00010101000000';
			Пока Выборка.Следующий() Цикл
				
				Если Кислотность = ""	Тогда
					Кислотность = Выборка.Кислотность;
				ИначеЕсли Выборка.Кислотность <> "соответствует"
					и Выборка.Кислотность <> "нейтральная" 	Тогда
					Кислотность = Выборка.Кислотность;
				КонецЕсли;			
				Если Выборка.ОксидыАзота > ОксидыАзота Тогда
					ОксидыАзота = Выборка.ОксидыАзота;
				КонецЕсли;			
				Если Выборка.СО2 > СО2 Тогда
					СО2 = Выборка.СО2;
				КонецЕсли;			
				Если Выборка.СО > СО Тогда
					СО = Выборка.СО;
				КонецЕсли;			
				Если Выборка.НеконденсирующиесяГазы > НеконденсирующиесяГазы Тогда
					НеконденсирующиесяГазы = Выборка.НеконденсирующиесяГазы;
				КонецЕсли;			
				Если Выборка.ВодяныеПары > ВодяныеПары Тогда
					ВодяныеПары = Выборка.ВодяныеПары;
				КонецЕсли;		
				Если Не Выборка.Галогены Тогда
					Галогены = Ложь;
				КонецЕсли;		
				
				Если Выборка.ОсновноеВещество < ОсновноеВещество Тогда
					ОсновноеВещество = Выборка.ОсновноеВещество;
				КонецЕсли;	
				
				Если Выборка.ДатаАнализа>ДатаАнализаКонец  Тогда
					ДатаАнализаКонец = НачалоДня(Выборка.ДатаАнализа)
				КонецЕсли;	
				
				Если Выборка.ДатаАнализа<ДатаАнализаНачало  Тогда
					ДатаАнализаНачало = НачалоДня(Выборка.ДатаАнализа)
				КонецЕсли;	
				
			КонецЦикла;
			
			ОбластьТехническиеТребования.Параметры.ОксидыАзота = ОксидыАзота;
			ОбластьТехническиеТребования.Параметры.СО2 = СО2;
			ОбластьТехническиеТребования.Параметры.СО = СО;
			ОбластьТехническиеТребования.Параметры.НеконденсирующиесяГазы = НеконденсирующиесяГазы;
			ОбластьТехническиеТребования.Параметры.ВодяныеПары = ВодяныеПары;
			ОбластьТехническиеТребования.Параметры.Кислотность = Кислотность;
			
			//Если Кислотность Тогда 
			//	ОбластьТехническиеТребования.Параметры.Кислотность = "Соответствует"
			//иначе
			//	ОбластьТехническиеТребования.Параметры.Кислотность = "Не соответствует"
			//КонецЕсли;
			
			Если Галогены Тогда 
				ОбластьТехническиеТребования.Параметры.Галогены = "Отсутствие опалесценции"
			иначе
				ОбластьТехническиеТребования.Параметры.Галогены = "Появление опалесценции"
			КонецЕсли;
			
			Если ОксидыАзота = 0.00001 Тогда 
				ОбластьТехническиеТребования.Параметры.ОксидыАзота = "<0.00001"
			КонецЕсли;
			Если СО = 0.0001 Тогда 
				ОбластьТехническиеТребования.Параметры.СО = "<0.0001"
			КонецЕсли;		
			Если СО2 = 0 Тогда 
				ОбластьТехническиеТребования.Параметры.СО2 =  "отсутствие мути"
			КонецЕсли;		
			
			Если ТипОтгрузки <>   "Медицинский" Тогда
				ОбластьТехническиеТребования.Параметры.ОсновноеВещество = ОсновноеВещество;
				Если ОсновноеВещество >= 99.79 Тогда 
					ОбластьТехническиеТребования.Параметры.ОсновноеВещество = ">99.79"
				КонецЕсли;	
			КонецЕсли;	
			КоличествоБаллонов = ТекущаяОтгрузка.ПартииБаллоныРезервированные.Количество();		
			ОбластьТехническиеТребования.Параметры.КоличествоБаллонов = КоличествоБаллонов;
			
			Если ДатаАнализаНачало = ДатаАнализаКонец Тогда 
				ТекстДатаАнализа = Формат(ДатаАнализаНачало,"ДФ=dd.MM.yyyy")
			иначе
				ТекстДатаАнализа = Формат(ДатаАнализаНачало,"ДФ=dd.MM.yyyy")+"-"+Формат(ДатаАнализаКонец,"ДФ=dd.MM.yyyy")
			КонецЕсли;	
			ОбластьТехническиеТребования.Параметры.ТекстДатаАнализа =ТекстДатаАнализа;		
			ТабДокСертификат.Вывести(ОбластьТехническиеТребования);
			
			ОбластьПодвал =  Макет.ПолучитьОбласть("Подвал");
			ДанныеПодписант1 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант1, Текущаяотгрузка.Дата);
			ОбластьПодвал.Параметры.ФИОПодписант1 =      ДанныеПодписант1.Представление;
			//	ОбластьПодвал.Параметры.ДолжностьПодписант1 = ДанныеПодписант1.Должность;
			
			//ДанныеПодписант2 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант2, Текущаяотгрузка.Дата);
			//ОбластьПодвал.Параметры.ФИОПодписант2 =      ДанныеПодписант2.Представление;
			//ОбластьПодвал.Параметры.ДолжностьПодписант2 = ДанныеПодписант2.Должность;
			//
			//ДанныеПодписант3 = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Текущаяотгрузка.Организация, Текущаяотгрузка.Подписант3, Текущаяотгрузка.Дата);
			//ОбластьПодвал.Параметры.ФИОПодписант3	=      ДанныеПодписант3.Представление;
			//ОбластьПодвал.Параметры.ДолжностьПодписант3 = ДанныеПодписант3.Должность;
			
			ОбластьПодвал.Параметры.Дата = Формат(Текущаяотгрузка.Дата,"ДФ='dd MMMM yyyy'");
			ТабДокСертификат.Вывести(ОбластьПодвал);
			ТабДок.Вывести(ТабДокСертификат);
			
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ОбластьШапкаСертификат = Макет.ПолучитьОбласть("ШапкаСертификат");
			ОбластьШапкаСертификат.Параметры.Номер =ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
			ОбластьШапкаСертификат.Параметры.КоличествоБаллонов =КоличествоБаллонов;
			ТабДок.Вывести(ОбластьШапкаСертификат);
			НужноВывестиСертификат = Ложь;
			НуженНовыйЛистДляСерии = Ложь;

			НомерПартииНаЛисте = 1;
			ВыборкаВыпуск = РезультатЗапросаБаллоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
			Пока ВыборкаВыпуск.Следующий() Цикл	
				
				Если НуженНовыйЛистДляСерии Тогда
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц(); 			
				КонецЕсли;
				
				СерияПартии = Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии( ВыборкаВыпуск.Выпуск.ТипВыпуска,ВыборкаВыпуск.Выпуск.Номер); 
				ОбластьСерияПриложения = Макет.ПолучитьОбласть("СерияПриложения");
				ОбластьСерияПриложения.Параметры.Серия =СерияПартии;
				ТабДок.Вывести(ОбластьСерияПриложения);

				
				ВыборкаПартия = ВыборкаВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
				
				Пока ВыборкаПартия.Следующий() Цикл
					ОбластьПартия = Макет.ПолучитьОбласть("Партия");
					// Вставить обработку выборки ВыборкаВыпуск
					ОбластьПартия.Параметры.Партия =ВыборкаПартия.Партия;
					// Вставить обработку выборки ВыборкаПартия
					НомерБаллона = 1;
					ВыборкаДетальныеЗаписи = ВыборкаПартия.Выбрать();				//
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						ОбластьПартия.Параметры["Баллон"+НомерБаллона] = ВыборкаДетальныеЗаписи.Баллон;
						НомерБаллона = НомерБаллона+1;
					КонецЦикла;
					//Если НужноВывестиСертификат Тогда				
					//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					//	ТабДок.Вывести(ТабДокСертификат);
					//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					//	ТабДок.Вывести(ОбластьШапкаСертификат);
					//	НужноВывестиСертификат = Ложь;
					//КонецЕсли; 
					ТабДок.Вывести(ОбластьПартия);
					НомерПартииНаЛисте = НомерПартииНаЛисте+1;
					Если НомерПартииНаЛисте >10 тогда
						НужноВывестиСертификат = Истина;
						НомерПартииНаЛисте =1;
					КонецЕсли;	
				КонецЦикла;
				НуженНовыйЛистДляСерии = Истина;

			КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
	

	ТабДок.НижнийКолонтитул.НачальнаяСтраница = 1;
	ТабДок.НижнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
	ТабДок.НижнийКолонтитул.ТекстВЦентре= "[&НомерСтраницы] из [&СтраницВсего]";
	ТабДок.НижнийКолонтитул.Выводить = Истина;
	Возврат ТабДок;
КонецФункции

Функция ПечатьЖелезнодорожнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
//	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 5;
	ТабДок.ПолеСнизу			= 5;
	ТабДок.ПолеСправа			= 10;
	ТабДок.ПолеСлева		= 10;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабДок.Очистить();
	
	Макет = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПолучитьМакет("ЖелезнодорожнаяНакладная");
	
	Для каждого ТекущаяОтгрузка Из  МассивОбъектов Цикл
		
		НакладнаяЖД = ПолучитьНакладнуюЖД(ТекущаяОтгрузка);
		СведенияОКонтрагентах = Новый Структура();
		СведенияОКонтрагентах.Вставить("Контрагент", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Контрагент,      НакладнаяЖД.Дата));
		СведенияОКонтрагентах.Вставить("Организация", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(НакладнаяЖД.Организация,      НакладнаяЖД.Дата));
		СведенияОКонтрагентах.Вставить("Грузополучатель", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(НакладнаяЖД.Грузополучатель,      НакладнаяЖД.Дата));
		
		
		ОбластьШапка=Макет.ПолучитьОбласть("стр");
		ОбластьШапка.Параметры.КодВладельцаКонтейнера =  НакладнаяЖД.КодВладельцаКонтейнера;
		ОбластьШапка.Параметры.НомерКонтейнера =  НакладнаяЖД.НомерКонтейнера;
		ОбластьШапка.Параметры.КонтейнерТоннаж =  НакладнаяЖД.Контейнер.Тоннаж;
		ОбластьШапка.Параметры.КонтейнерМасса =  НакладнаяЖД.Контейнер.Масса;
		ОбластьШапка.Параметры.СтанцияНазначения =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"СтанцияНазначения");
		ОбластьШапка.Параметры.КодСтанцииНазначения =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"КодСтанцииНазначения");
		ОбластьШапка.Параметры.ЖелезнаяДорога =УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"ЖелезнаяДорога");
		ОбластьШапка.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"СокращенноеНаименование");
		ОбластьШапка.Параметры.ОКПО = СведенияОКонтрагентах.Организация.КодПоОКПО;//ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,"КодОКПО");
		
		
		ОбластьШапка.Параметры.ОрганизацияАдрес =ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"ФактическийАдрес");
		
		ОбластьШапка.Параметры.КодПлательщика12 = НакладнаяЖД.КодПлательщика12;
		ОбластьШапка.Параметры.КодПлательщика7 = НакладнаяЖД.КодПлательщика7;
		
		ОбластьШапка.Параметры.Контрагент = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		"ПолноеНаименование");
		
		ОбластьШапка.Параметры.КонтрагентОКПО = СведенияОКонтрагентах.Контрагент.КодПоОКПО;//ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,"ОКПО");
		//"ОКПО");
		
		ОбластьШапка.Параметры.ВыКонтрагентКодЖД =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"КодЖД");
		
		
		
		ГрузополучательТекст  =ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Грузополучатель,
		"ПолноеНаименование,ФактическийАдрес");
		
		ОбластьШапка.Параметры.ГрузополучательАдреса =ГрузополучательТекст + Символы.ПС
		+ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		",ФактическийАдрес");
		
		ОбластьШапка.Параметры.КоличествоБаллоновВОтгрузке = ТекущаяОтгрузка.КоличествоБаллоновВОтгрузке;
		ОбластьШапка.Параметры.КоличествоПрописью =  ЧислоПрописью(ТекущаяОтгрузка.КоличествоБаллоновВОтгрузке, ,",,,,,,,,0");
		
		
		ОтветственныйОтгрузки = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(НакладнаяЖД.Организация, НакладнаяЖД.Ответственный.ФизическоеЛицо, НакладнаяЖД.Дата);
		ОбластьШапка.Параметры.ФИООтветственный =      ОтветственныйОтгрузки.Представление;
		ОбластьШапка.Параметры.ДолжностьОтветственный = ОтветственныйОтгрузки.Должность;
		
		
		МассаНетто = 0;
		Для каждого СтрокаПартииБаллоны Из Текущаяотгрузка.ПартииБаллоны Цикл
			Нетто = Документы.МГС_ВыпускБаллонов.РассчитатьНетто(СтрокаПартииБаллоны.Баллон.ТипБаллона);
			ВесТары = СтрокаПартииБаллоны.Баллон.ВесТары;
			Брутто = Нетто+ВесТары;
			
			Брутто =Документы.МГС_ВыпускБаллонов.РассчитатьБруттоБаллона(ВесТары,Нетто,0,0);//СтрокаПартииБаллоны.ДанныеПартии.Колпак,ДанныеПартии.Кольца);			
			МассаНетто = МассаНетто+Брутто;
		КонецЦикла;
		
		Для каждого СтрокаПартииБаллоны Из Текущаяотгрузка.ПартииБаллоныРезервированные Цикл
			Нетто = Документы.МГС_ВыпускБаллонов.РассчитатьНетто(СтрокаПартииБаллоны.Баллон.ТипБаллона);
			ВесТары = СтрокаПартииБаллоны.Баллон.ВесТары;
			Брутто = Нетто+ВесТары;
			
			Брутто =Документы.МГС_ВыпускБаллонов.РассчитатьБруттоБаллона(ВесТары,Нетто,0,0);//СтрокаПартииБаллоны.ДанныеПартии.Колпак,ДанныеПартии.Кольца);			
			МассаНетто = МассаНетто+Брутто;
		КонецЦикла;
		
		ОбщаяМасса = МассаНетто +НакладнаяЖД.Контейнер.Масса;
		ОбластьШапка.Параметры.МассаНеттоПрописью = ЧислоПрописью(МассаНетто, ,",,,,,,,,0");
		ОбластьШапка.Параметры.МассаНетто = МассаНетто;
		ОбластьШапка.Параметры.ОбщаяМасса = ОбщаяМасса;
		
		
		ТабДок.Вывести(ОбластьШапка);
		
	КонецЦикла;	
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьСертификатНаТару(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 10;
	ТабДок.ПолеСнизу			= 10;
	ТабДок.ПолеСправа			= 0;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабДок.Очистить();
	
	Макет = Документы.МГС_ОтгрузкаБаллонов.ПолучитьМакет("СертификатНаТару");
	
	Для каждого ТекущаяОтгрузка Из  МассивОбъектов Цикл
		НакладнаяЖД = ПолучитьНакладнуюЖД(ТекущаяОтгрузка);
		
		СведенияОКонтрагентах = Новый Структура();
		СведенияОКонтрагентах.Вставить("Контрагент", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Контрагент,      Текущаяотгрузка.Дата));
		СведенияОКонтрагентах.Вставить("Организация", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Организация,      Текущаяотгрузка.Дата));
		
		
		ОбластьВерх=Макет.ПолучитьОбласть("Верх");
		ОбластьВерх.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
		ОбластьВерх.Параметры.Дата = Формат(Текущаяотгрузка.Дата,"ДФ='dd MMMM yyyy'");
		ОбластьВерх.Параметры.Контрагент = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		"СокращенноеНаименование,ФактическийАдрес");
		ОбластьВерх.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"СокращенноеНаименование");
		Если  НакладнаяЖД = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка() Тогда
			ОбластьВерх.Параметры.НомерКонтейнера = ТекущаяОтгрузка. Реализация.РегистрационныйЗнакАвтомобиля
		иначе	
			ОбластьВерх.Параметры.НомерКонтейнера = НакладнаяЖД.НомерКонтейнера;
		КонецЕсли; 
		
		ТабДок.Вывести(ОбластьВерх);
		
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		ОбластьСтрока.Параметры.Тара = ПолучитьТипБаллонаПоНоменклатуре(Текущаяотгрузка.Номенклатура);
		ОбластьСтрока.Параметры.Количество= Текущаяотгрузка.КоличествоБаллоновВОтгрузке;
		ОбластьСтрока.Параметры.ДатаВозвратаТары = Формат(Текущаяотгрузка.ДатаВозвратаТары,"ДФ='dd.MM.yyyy'");
		ОбластьСтрока.Параметры.Примечание = "Баллоны подлежат возврату в полном комплекте";
		ТабДок.Вывести(ОбластьСтрока);
		
		Если НакладнаяЖД.ЩитДеревянныйКоличество >0 Тогда
			ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Тара ="Щит деревянный 170*2200";
			ОбластьСтрока.Параметры.Количество= НакладнаяЖД.ЩитДеревянныйКоличество;
			ОбластьСтрока.Параметры.ДатаВозвратаТары = Формат(Текущаяотгрузка.ДатаВозвратаТары,"ДФ='dd.MM.yyyy'");
			ОбластьСтрока.Параметры.Примечание = "";
			ТабДок.Вывести(ОбластьСтрока);		
		КонецЕсли;
		
		ОбластьНиз=Макет.ПолучитьОбласть("Низ");
		ОбластьНиз.Параметры.НомерПломбы = Текущаяотгрузка.НомерПломбы;
		ТабДок.Вывести(ОбластьНиз);
	КонецЦикла;	
	Возврат ТабДок;
КонецФункции

Функция ПечатьПротокол(МассивОбъектов,ОбъектыПечати, ПараметрыПечати)
	ЭтотДокумент =МассивОбъектов[0].Реализация; 

	ДатаДок =ЭтотДокумент.Дата;
	НомерДок  =ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ЭтотДокумент.Номер, Истина, Ложь);
	

	мУчетВПродажныхЦенах = Ложь;
	
	Макет = ПолучитьМакет("Протокол");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТипОтгрузки = ПолучитьТипОтгрузкиПоНоменклатуре(МассивОбъектов[0]. Номенклатура) ; 
	Если ТипОтгрузки<>  "Медицинский" Тогда
		ОбластьМакета1         = Макет.ПолучитьОбласть("Область1");
		ТабДокумент.Вывести(ОбластьМакета1);
		Возврат ТабДокумент;
	КонецЕсли;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Протокол";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЭтотДокумент.Организация, ЭтотДокумент.Дата);
	ОбластьМакета         = Макет.ПолучитьОбласть("Шапка");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
	"ПолноеНаименование");
	//ОбластьМакета.Параметры.ДатаДокумента            = ЭтотДокумент.Дата;
	//ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	
	СведенияОКонтрагенте  = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ЭтотДокумент.Контрагент, ЭтотДокумент.Дата);
	ОбластьМакета.Параметры.ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте,
	"ПолноеНаименование, ФактическийАдрес");
	
	ОбластьМакета.Параметры.ДатаДок=  ДатаДок;
	ОбластьМакета.Параметры.НомерДок=   НомерДок ;
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	ТаблицаТовары = ЭтотДокумент.Товары;
	
	
	ПереченьСерийТекст = ПолучитьПереченьСерийТекст(МассивОбъектов[0]);

	
	Для Каждого СтрокаТаблицаТовары из  ТаблицаТовары Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицаТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
		
	
		
		//ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ?(ПустаяСтрока(СтрокаТаблицаТовары.Номенклатура.НаименованиеПолное) = 0, СокрЛП(СтрокаТаблицаТовары.Номенклатура.НаименованиеПолное), СокрЛП(СтрокаТаблицаТовары.Номенклатура.Наименование))	;
		
		ОбластьМакета.Параметры.ПредставлениеОрганизации = (СведенияОбОрганизации.Представление);
		ОбластьМакета.Параметры.Серия = ПереченьСерийТекст  ;
		
		
		Сумма = СтрокаТаблицаТовары.Сумма - ?(ЭтотДокумент.СуммаВключаетНДС,  СтрокаТаблицаТовары.СуммаНДС,0);
		//Сообщить(СтрокаТаблицаТовары.Сумма );
		//Сообщить(СтрокаТаблицаТовары.СуммаНДС );
		//Сообщить(Сумма );
		
		Цена = ?(СтрокаТаблицаТовары.Количество = 0, 0, Сумма / СтрокаТаблицаТовары.Количество);
		
		
		
		ОбластьМакета.Параметры.ПечЦена  =Формат(Цена, "ЧДЦ=2; ЧРГ=");
		ТипЦен =  Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Предельная отпускная цена"); 
		ПредельнаяОтпускнаяЦена =   Ценообразование.ПолучитьЦенуНоменклатуры(СтрокаТаблицаТовары.Номенклатура, ТипЦен, ДатаДок, )    ;

		ОбластьМакета.Параметры.ПредельнаяОтпускнаяЦена   =  Формат(ПредельнаяОтпускнаяЦена, "ЧДЦ=2; ЧРГ="); 
		ТабДокумент.Вывести(ОбластьМакета);
		
		
		//		
	КонецЦикла;
  
	
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); 
	
	
	ДанныеРуковдителя = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ЭтотДокумент.Организация, ЭтотДокумент.Руководитель, ЭтотДокумент.Дата);
	
	ОбластьМакетаПодвал.Параметры.РуководительФИО = ДанныеРуковдителя.Представление;
	ОбластьМакетаПодвал.Параметры.ДатаДок = Формат(ДатаДок,"ДФ=dd.MM.yyyy"); 	 	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ЭтотДокумент);
	
	Возврат ТабДокумент;
	
КонецФункции 

//   	// ВставлятьРазделительСтраниц = Истина;
//    КонецЦикла;
//    
//   Возврат ТабДок;
//КонецФункции
//
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Сертификат") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Сертификат", "Сертификат", 
		ПечатьСертификат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ОтгрузкаБаллонов.Сертификат");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖелезнодорожнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЖелезнодорожнаяНакладная", "Железнодорожная накладная", 
		ПечатьЖелезнодорожнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_НакладнаяЖелезнодорожнымТранспортом.ЖелезнодорожнаяНакладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СертификатНаТару") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СертификатНаТару", "Сертификат на тару", 
		ПечатьСертификатНаТару(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ОтгрузкаБаллонов.Сертификат");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПротоколСогласованияЦен") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПротоколСогласованияЦен", "Протокол согласования цен", 
		ПечатьПротокол(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ОтгрузкаБаллонов.Протокол");
	КонецЕсли;
	//		
	//	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетПоПартии")Тогда
	//		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетПоПартии", "Отчет по партии", 
	//			ОтчетПоПартии(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ВыпускБаллонов.ОтчетПоПартии");
	//	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	КоллекцияПечатныхФорм,
	ОбъектыПечати,
	ПараметрыВывода);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Сертификат
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Сертификат";
	КомандаПечати.Представление = НСтр("ru = 'Сертификат'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	// НакладнаяЖД
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖелезнодорожнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Железнодорожная накладная'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	// СертификатНаТару
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СертификатНаТару";
	КомандаПечати.Представление = НСтр("ru = 'Сертификат на тару'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПротоколСогласованияЦен";
	КомандаПечати.Представление = НСтр("ru = 'Протокол согласования цен'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	//// ПартияРБ
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПартияРБ";
	//КомандаПечати.Представление = НСтр("ru = 'Партия РБ'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок = 10;
	//
	//// ПартияПЗА
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ПартияПЗА";
	//КомандаПечати.Представление = НСтр("ru = 'Партия ПЗА'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	//КомандаПечати.Порядок = 10;
	
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Реализация (акт, накладная)""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТипОтгрузкиПоНоменклатуре(Номенклатура) Экспорт
	Если Найти(Номенклатура.Наименование,"пищевая")>0 Тогда
		Возврат "Пищевой"
	Иначе
		ВыпускаемаяПродукцияМедицинский =Справочники.МГС_ТипыВыпускаБаллонов.Медицинский.ВыпускаемаяПродукция;
		Если ВыпускаемаяПродукцияМедицинский.Найти(Номенклатура,"Номенклатура") <> Неопределено Тогда
			Возврат "Медицинский"
		иначе
			Возврат "Технический"
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьТипВыпускаПоНоменклатуре(Номенклатура) Экспорт
	ВыборкаМГС_ТипыВыпускаБаллонов = Справочники.МГС_ТипыВыпускаБаллонов.Выбрать();
	Пока ВыборкаМГС_ТипыВыпускаБаллонов.Следующий() Цикл
		ВыпускаемаяПродукция = ВыборкаМГС_ТипыВыпускаБаллонов.ВыпускаемаяПродукция;
		Если ВыпускаемаяПродукция.Найти(Номенклатура,"Номенклатура") <> Неопределено Тогда
			Возврат ВыборкаМГС_ТипыВыпускаБаллонов.Ссылка
		КонецЕсли;	
	КонецЦикла;
	ВОзврат "";
КонецФункции

Функция ПолучитьНакладнуюЖД(СсылкаОтгрузка)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МГС_НакладнаяЖелезнодорожнымТранспортом.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.МГС_НакладнаяЖелезнодорожнымТранспортом КАК МГС_НакладнаяЖелезнодорожнымТранспортом
	|ГДЕ
	|	МГС_НакладнаяЖелезнодорожнымТранспортом.ОтгрузкаБаллонов = &ОтгрузкаБаллонов
	|	И МГС_НакладнаяЖелезнодорожнымТранспортом.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ОтгрузкаБаллонов", СсылкаОтгрузка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Возврат ВыборкаДетальныеЗаписи.Ссылка
	Иначе
		Возврат Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПустаяСсылка()	
	КонецЕсли;
КонецФункции


Функция ПолучитьДатуВозвратаТары(ДокументРеализация,ДатаОтгрузки) Экспорт 
	// Вставить содержимое обработчика.
	СрокВозвратаТары = УправлениеСвойствами.ЗначениеСвойства(ДокументРеализация.ДоговорКонтрагента,"СрокВозвратаТары1");
	Если СрокВозвратаТары = 0 или СрокВозвратаТары = Неопределено Тогда
		СрокВозвратаТары =120
	КонецЕсли;
	Возврат ДатаОтгрузки+24*3600*СрокВозвратаТары; 
	

КонецФункции // ()

Функция ПолучитьТипБаллонаПоНоменклатуре(Номенклатура) Экспорт
	ВыборкаМГС_ТипыВыпускаБаллонов = Справочники.МГС_ТипыВыпускаБаллонов.Выбрать();
	Пока ВыборкаМГС_ТипыВыпускаБаллонов.Следующий() Цикл
		ВыпускаемаяПродукция = ВыборкаМГС_ТипыВыпускаБаллонов.ВыпускаемаяПродукция;
		НайденнаяСтрока = ВыпускаемаяПродукция.Найти(Номенклатура,"Номенклатура"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			Возврат НайденнаяСтрока.ТипБаллона
		КонецЕсли;	
	КонецЦикла;
	ВОзврат "";
КонецФункции

Функция ПолучитьПереченьСерийТекст(СсылкаМГС_ОтгрузкаБаллонов) Экспорт  
	  		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ПереченьСерийТекст ="";	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МГС_ОтгрузкаБаллоновПартииБаллоны.Выпуск КАК Выпуск
	|ИЗ
	|	Документ.МГС_ОтгрузкаБаллонов.ПартииБаллоны КАК МГС_ОтгрузкаБаллоновПартииБаллоны
	|ГДЕ
	|	МГС_ОтгрузкаБаллоновПартииБаллоны.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаМГС_ОтгрузкаБаллонов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ПереченьСерийТекст = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ПереченьСерийТекст =ПереченьСерийТекст+
		Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии( ВыборкаДетальныеЗаписи.Выпуск.ТипВыпуска,ВыборкаДетальныеЗаписи.Выпуск.Номер)
		+", ";
	КонецЦикла;
	Если СтрЗаканчиваетсяНа(ПереченьСерийТекст,", ") Тогда			
		ПереченьСерийТекст = Лев(ПереченьСерийТекст,СтрДлина(ПереченьСерийТекст)-2);
	КонецЕсли;	  
	
	Возврат ПереченьСерийТекст
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецФункции
