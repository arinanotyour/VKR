Функция ПечатьЖелезнодорожнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
//	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 5;
	ТабДок.ПолеСнизу			= 5;
	ТабДок.ПолеСправа			= 10;
	ТабДок.ПолеСлева		= 10;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабДок.Очистить();
	
	Макет = Документы.МГС_НакладнаяЖелезнодорожнымТранспортом.ПолучитьМакет("ЖелезнодорожнаяНакладная");
	
	Для каждого НакладнаяЖД Из  МассивОбъектов Цикл
		Текущаяотгрузка = НакладнаяЖД.ОтгрузкаБаллонов;
		
		СведенияОКонтрагентах = Новый Структура();
		СведенияОКонтрагентах.Вставить("Контрагент", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Контрагент,      НакладнаяЖД.Дата));
		СведенияОКонтрагентах.Вставить("Организация", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(НакладнаяЖД.Организация,      НакладнаяЖД.Дата));
		СведенияОКонтрагентах.Вставить("Грузополучатель", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(НакладнаяЖД.Грузополучатель,      НакладнаяЖД.Дата));
		
		
		ОбластьШапка=Макет.ПолучитьОбласть("стр");
		ОбластьШапка.Параметры.КодВладельцаКонтейнера =  НакладнаяЖД.КодВладельцаКонтейнера;
		ОбластьШапка.Параметры.НомерКонтейнера =  НакладнаяЖД.НомерКонтейнера;
		ОбластьШапка.Параметры.КонтейнерТоннаж =  НакладнаяЖД.Контейнер.Тоннаж;
		ОбластьШапка.Параметры.КонтейнерМасса =  НакладнаяЖД.Контейнер.Масса;
		ОбластьШапка.Параметры.СтанцияНазначения =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"СтанцияНазначения");
		ОбластьШапка.Параметры.КодСтанцииНазначения =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"КодСтанцииНазначения");
		ОбластьШапка.Параметры.ЖелезнаяДорога =УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"ЖелезнаяДорога");
		ОбластьШапка.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"СокращенноеНаименование");
		ОбластьШапка.Параметры.ОКПО = СведенияОКонтрагентах.Организация.КодПоОКПО;//ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,"КодОКПО");
		
		
		ОбластьШапка.Параметры.ОрганизацияАдрес =ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"ФактическийАдрес");
		
		ОбластьШапка.Параметры.КодПлательщика12 = НакладнаяЖД.КодПлательщика12;
		ОбластьШапка.Параметры.КодПлательщика7 = НакладнаяЖД.КодПлательщика7;
		
		ОбластьШапка.Параметры.Контрагент = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		"ПолноеНаименование");
		
		ОбластьШапка.Параметры.КонтрагентОКПО = СведенияОКонтрагентах.Контрагент.КодПоОКПО;//ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,"ОКПО");
		//"ОКПО");
		
		ОбластьШапка.Параметры.ВыКонтрагентКодЖД =  УправлениеСвойствами.ЗначениеСвойства(Текущаяотгрузка.Контрагент,"КодЖД");
		
		
		
		ГрузополучательТекст  =ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Грузополучатель,
		"ПолноеНаименование,ФактическийАдрес");
		
		ОбластьШапка.Параметры.ГрузополучательАдреса =ГрузополучательТекст + Символы.ПС
		+ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		",ФактическийАдрес");
		
		ОбластьШапка.Параметры.КоличествоБаллоновВОтгрузке = ТекущаяОтгрузка.КоличествоБаллоновВОтгрузке;
		ОбластьШапка.Параметры.КоличествоПрописью =  ЧислоПрописью(ТекущаяОтгрузка.КоличествоБаллоновВОтгрузке, ,",,,,,,,,0");
		
		
		ОтветственныйОтгрузки = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(НакладнаяЖД.Организация, НакладнаяЖД.Ответственный.ФизическоеЛицо, НакладнаяЖД.Дата);
		ОбластьШапка.Параметры.ФИООтветственный =      ОтветственныйОтгрузки.Представление;
		ОбластьШапка.Параметры.ДолжностьОтветственный = ОтветственныйОтгрузки.Должность;
		
		
		МассаНетто = 0;
		Для каждого СтрокаПартииБаллоны Из Текущаяотгрузка.ПартииБаллоны Цикл
			Нетто = Документы.МГС_ВыпускБаллонов.РассчитатьНетто(СтрокаПартииБаллоны.Баллон.ТипБаллона);
			ВесТары = СтрокаПартииБаллоны.Баллон.ВесТары;
			Брутто = Нетто+ВесТары;
			
			Брутто =Документы.МГС_ВыпускБаллонов.РассчитатьБруттоБаллона(ВесТары,Нетто,0,0);//СтрокаПартииБаллоны.ДанныеПартии.Колпак,ДанныеПартии.Кольца);			
			МассаНетто = МассаНетто+Брутто;
		КонецЦикла;
		
		Для каждого СтрокаПартииБаллоны Из Текущаяотгрузка.ПартииБаллоныРезервированные Цикл
			Нетто = Документы.МГС_ВыпускБаллонов.РассчитатьНетто(СтрокаПартииБаллоны.Баллон.ТипБаллона);
			ВесТары = СтрокаПартииБаллоны.Баллон.ВесТары;
			Брутто = Нетто+ВесТары;
			
			Брутто =Документы.МГС_ВыпускБаллонов.РассчитатьБруттоБаллона(ВесТары,Нетто,0,0);//СтрокаПартииБаллоны.ДанныеПартии.Колпак,ДанныеПартии.Кольца);			
			МассаНетто = МассаНетто+Брутто;
		КонецЦикла;
		
		ОбщаяМасса = МассаНетто +НакладнаяЖД.Контейнер.Масса;
		ОбластьШапка.Параметры.МассаНеттоПрописью = ЧислоПрописью(МассаНетто, ,",,,,,,,,0");
		ОбластьШапка.Параметры.МассаНетто = МассаНетто;
		ОбластьШапка.Параметры.ОбщаяМасса = ОбщаяМасса;
		
		
		ТабДок.Вывести(ОбластьШапка);
		
	КонецЦикла;	
	Возврат ТабДок;
КонецФункции


Функция ПечатьСертификатНаТару(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.ПолеСверху			= 10;
	ТабДок.ПолеСнизу			= 10;
	ТабДок.ПолеСправа			= 0;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Партии";
	ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
	ТабДок.Очистить();
	
	Макет = Документы.МГС_ОтгрузкаБаллонов.ПолучитьМакет("СертификатНаТару");
	
	Для каждого НакладнаяЖД Из  МассивОбъектов Цикл
		
		ТекущаяОтгрузка = 	НакладнаяЖД.ОтгрузкаБаллонов;
		
		СведенияОКонтрагентах = Новый Структура();
		СведенияОКонтрагентах.Вставить("Контрагент", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Контрагент,      Текущаяотгрузка.Дата));
		СведенияОКонтрагентах.Вставить("Организация", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Текущаяотгрузка.Организация,      Текущаяотгрузка.Дата));
		
		
		ОбластьВерх=Макет.ПолучитьОбласть("Верх");
		ОбластьВерх.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Текущаяотгрузка.Номер, Истина, Ложь);
		ОбластьВерх.Параметры.Дата = Формат(Текущаяотгрузка.Дата,"ДФ='dd MMMM yyyy'");
		ОбластьВерх.Параметры.Контрагент = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Контрагент,
		"СокращенноеНаименование,ФактическийАдрес");
		ОбластьВерх.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагентах.Организация,
		"СокращенноеНаименование");
		ОбластьВерх.Параметры.НомерКонтейнера = НакладнаяЖД.НомерКонтейнера;
		ТабДок.Вывести(ОбластьВерх);
		
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		ОбластьСтрока.Параметры.Тара = Документы.МГС_ОтгрузкаБаллонов.ПолучитьТипБаллонаПоНоменклатуре(Текущаяотгрузка.Номенклатура);
		ОбластьСтрока.Параметры.Количество= Текущаяотгрузка.КоличествоБаллоновВОтгрузке;
		ОбластьСтрока.Параметры.ДатаВозвратаТары = Формат(Текущаяотгрузка.ДатаВозвратаТары,"ДФ='dd.MM.yyyy'");
		ОбластьСтрока.Параметры.Примечание = "Баллоны подлежат возврату в полном комплекте";
		ТабДок.Вывести(ОбластьСтрока);
		
		Если НакладнаяЖД.ЩитДеревянныйКоличество >0 Тогда
			ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Тара ="Щит деревянный 170*2200";
			ОбластьСтрока.Параметры.Количество= НакладнаяЖД.ЩитДеревянныйКоличество;
			ОбластьСтрока.Параметры.ДатаВозвратаТары = Формат(Текущаяотгрузка.ДатаВозвратаТары,"ДФ='dd.MM.yyyy'");
			ОбластьСтрока.Параметры.Примечание = "";
			ТабДок.Вывести(ОбластьСтрока);		
		КонецЕсли;
		
		ОбластьНиз=Макет.ПолучитьОбласть("Низ");
		ОбластьНиз.Параметры.НомерПломбы = Текущаяотгрузка.НомерПломбы;
		ТабДок.Вывести(ОбластьНиз);
	КонецЦикла;	
	Возврат ТабДок;
КонецФункции


//   	// ВставлятьРазделительСтраниц = Истина;
//    КонецЦикла;
//    
//   Возврат ТабДок;
//КонецФункции
//
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖелезнодорожнаяНакладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЖелезнодорожнаяНакладная", "Железнодорожная накладная", 
		ПечатьЖелезнодорожнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_НакладнаяЖелезнодорожнымТранспортом.ЖелезнодорожнаяНакладная");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СертификатНаТару") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СертификатНаТару", "Сертификат на тару", 
		ПечатьСертификатНаТару(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.МГС_ОтгрузкаБаллонов.Сертификат");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
	КоллекцияПечатныхФорм,
	ОбъектыПечати,
	ПараметрыВывода);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	

	// НакладнаяЖД
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖелезнодорожнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Железнодорожная накладная'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;

	// СертификатНаТару
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СертификатНаТару";
	КомандаПечати.Представление = НСтр("ru = 'Сертификат на тару'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	КомандаПечати.Порядок = 10;
	
	
	Если ПравоДоступа("Использование", Метаданные.Отчеты.РеестрДокументов) Тогда
		// Реестр документов
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Реестр";
		КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
		КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Железнодорожная накладная""'");
		КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
		КомандаПечати.СписокФорм    = "ФормаСписка";
		КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
		КомандаПечати.Порядок       = 160;
	КонецЕсли;
	
КонецПроцедуры
