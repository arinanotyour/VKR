

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
//	// СтандартныеПодсистемы.ПодключаемыеКоманды
//	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
//КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНомерСерии (ТипВыпуска,НомерДокумента)

	Возврат Документы.МГС_ВыпускБаллонов.ПолучитьНомерСерии(ТипВыпуска,НомерДокумента)
	
КонецФункции

&НаСервере
Функция ПолучитьСписокБаллоновДругихПартий(ВыбраннаяСтрока)
	СписокБаллоновВыпуска = новый СписокЗначений;
	Для каждого строкаПартия из Объект.ПартииБаллоны Цикл
		Если строкаПартия.НомерСтроки = ВыбраннаяСтрока+1 Тогда
			Продолжить
		КонецЕсли;
		Для н=1 по 20 Цикл
			Если ЗначениеЗаполнено( строкаПартия["Баллон"+н]) Тогда
				СписокБаллоновВыпуска.Добавить(строкаПартия["Баллон"+н])
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат СписокБаллоновВыпуска
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуРедактированияПартии(ВыбраннаяСтрока=Неопределено, ТекстПредупреждения = "")
	
	ДанныеСтроки 	= Объект.ПартииБаллоны.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
	// Вставить содержимое обработчика.
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НомерПартии",               ДанныеСтроки.НомерПартии);
	ПараметрыФормы.Вставить("ТипБаллона",               ДанныеСтроки.ТипБаллона);
	ПараметрыФормы.Вставить("ТипВыпуска",               Объект.ТипВыпуска);
	ПараметрыФормы.Вставить("Закрыта",               ДанныеСтроки.Закрыта);
	ПараметрыФормы.Вставить("ОтветственныйЗаПартию", ДанныеСтроки.ОтветственныйЗаПартию);
	ПараметрыФормы.Вставить("Колпак",               ДанныеСтроки.Колпак);
	ПараметрыФормы.Вставить("Дата",               Объект.Дата);
	ПараметрыФормы.Вставить("Номер",               Объект.Номер);
	ПараметрыФормы.Вставить("ДатаПартии",         ДанныеСтроки.ДатаПартии);
	ПараметрыФормы.Вставить("Кольца", ДанныеСтроки.Кольца);
	ПараметрыФормы.Вставить("ЗакрыватьПривыборе" ,ложь);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца" ,ложь);
	ПараметрыФормы.Вставить("ТолькоПросмотр" ,ложь);
	ПереченьБаллонов = Новый Массив;
	ПереченьВесов = Новый Массив;
	Для Н =1 По 20 Цикл
		ПереченьБаллонов.Добавить(ДанныеСтроки["Баллон"+н]);
		ПереченьВесов.Добавить(ДанныеСтроки["Вес"+н]);
		ПараметрыФормы.Вставить("Баллон"+н,       ДанныеСтроки["Баллон"+н]);
		ПараметрыФормы.Вставить("Вес"+н,          ДанныеСтроки["Вес"+н]);
	КонецЦикла;
	ПараметрыФормы.Вставить("ПереченьБаллонов", ПереченьБаллонов);
	ПараметрыФормы.Вставить("ПереченьВесов", ПереченьВесов);
	//ПараметрыФормы.Вставить("ТаблицаБаллонов",          ТаблицаБаллонов);
	ПараметрыФормы.Вставить("КоличествоСтрок" ,Объект.ПартииБаллоны.Количество());
	ПараметрыФормы.Вставить("ТекущаяСтрока" ,ВыбраннаяСтрока+1);
	ПараметрыФормы.Вставить("Серия" ,ПолучитьНомерСерии(Объект.ТипВыпуска,Объект.Номер));
	ПараметрыФормы.Вставить("ТекстПредупреждения" ,ТекстПредупреждения);
	ПараметрыФормы.Вставить("СписокБаллоновВыпуска" ,ПолучитьСписокБаллоновДругихПартий(ВыбраннаяСтрока));
	ПараметрыФормы.Вставить("Номенклатура",               ДанныеСтроки.Номенклатура);
	ПараметрыФормы.Вставить("ТолькоПросмотр",             Элементы.ПартииБаллоны.ТолькоПросмотр);
	ОткрытьФорму("Документ.МГС_ВыпускБаллонов.Форма.ФормаПартииТерминал", ПараметрыФормы,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипБаллона (ТекНоменклатура)
	//Если ОбъектТипВыпуска.ВыпускаемаяПродукция.Количество()=1 Тогда
	//	Возврат ОбъектТипВыпуска.ВыпускаемаяПродукция[0].ТипБаллона
	//Иначе
	//	Возврат ""
	//КонецЕсли;
	Возврат Документы.МГС_ОтгрузкаБаллонов.ПолучитьТипБаллонаПоНоменклатуре(ТекНоменклатура)
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОтветственныйЗаПартию ()
	возврат ПараметрыСеанса.ТекущийПользователь
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекущаяДатаСеанса()
	возврат ТекущаяДатаСеанса()
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМаксимальныйНомерПартии(ТекущийТипВыпуска, дата)
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_ВыпускБаллоновПартииБаллоны.НомерПартии КАК НомерПартии
		|ПОМЕСТИТЬ ВтНомераПартии
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов.ПартииБаллоны КАК МГС_ВыпускБаллоновПартииБаллоны
		|ГДЕ
		|	МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ТипВыпуска = &ТипВыпуска
		|	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И МГС_ВыпускБаллоновПартииБаллоны.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВтНомераПартии.НомерПартии) КАК НомерПартии
		|ИЗ
		|	ВтНомераПартии КАК ВтНомераПартии";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(дата));
	Запрос.УстановитьПараметр("ТипВыпуска", ТекущийТипВыпуска);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если  ВыборкаДетальныеЗаписи.НомерПартии = Null Тогда
			Возврат 0;
		Иначе	
			Возврат ВыборкаДетальныеЗаписи.НомерПартии
		КонецЕсли; 
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	Возврат 0;
КонецФункции

&НаКлиенте
Функция ПолучитьНомерПартии()
	НомерСледующеййПартии =0;
	Для каждого СтрокаПартииБаллоны Из Объект.ПартииБаллоны Цикл
		Если СтрокаПартииБаллоны.НомерПартии>= НомерСледующеййПартии Тогда
			НомерСледующеййПартии = СтрокаПартииБаллоны.НомерПартии+1
		КонецЕсли;
	КонецЦикла;	
	Если НомерСледующеййПартии =1 Тогда
		МаксимальныйНомерПартии = ПолучитьМаксимальныйНомерПартии (Объект.ТипВыпуска, Объект.Дата);
		НомерСледующеййПартии =МаксимальныйНомерПартии+1
	КонецЕсли;	
	Если Не ЭтоМедицинскийВыпуск(Объект.ТипВыпуска) и НомерСледующеййПартии=1 Тогда
		НомерСледующеййПартии =Месяц(Объект.Дата)* 1000+НомерСледующеййПартии;
	КонецЕсли;
	Возврат НомерСледующеййПартии
КонецФункции

&НаСервере
Функция ПолучитьНоменклатуру()
	Если Объект.ТипВыпуска.ВыпускаемаяПродукция.Количество()>0 Тогда
		возврат Объект.ТипВыпуска.ВыпускаемаяПродукция[0].Номенклатура 
	КонецЕсли;
	возврат Справочники.Номенклатура.ПустаяСсылка()
КонецФункции

&НаКлиенте
Процедура ПартииБаллоныПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	ТекущаяСтрока = Элементы.ПартииБаллоны.ТекущаяСтрока;
	ТекущиеДанные = Элементы.ПартииБаллоны.ТекущиеДанные;
	Если НоваяСтрока Тогда
		Если Объект.Ссылка.Пустая() Тогда
			Записать();		
		КонецЕсли;
		
		ТекущиеДанные.Номенклатура = ПолучитьНоменклатуру ();
		ТекущиеДанные.ТипБаллона = ПолучитьТипБаллона (ТекущиеДанные.Номенклатура);
		ТекущиеДанные.НомерПартии = ПолучитьНомерПартии();
		ТекущиеДанные.ОтветственныйЗаПартию =ПолучитьОтветственныйЗаПартию() ;
		ТекущиеДанные.ДатаПартии =ПолучитьТекущаяДатаСеанса()
	КонецЕсли;
	ОткрытьФормуРедактированияПартии(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииБаллоныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ОткрытьФормуРедактированияПартии(ВыбраннаяСтрока);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Функция НельзяЗаводитьНовуюСтроку()
	// Вставить содержимое обработчика.
	
	Отказ= Ложь;
	ТекстПредупреждения ="";
	Если Не ЗначениеЗаполнено(Объект.ТипВыпуска) Тогда
		ТекстПредупреждения ="Не заполнен тип выпуска!";
		Отказ = истина;
	КонецЕсли;
	
	Если ЭтоМедицинскийВыпуск(Объект.ТипВыпуска) Тогда
		ЕстьНеЗакрытыеПарти = ложь;
		СчетчикБаллонов = 0;
		//Для каждого строкаПартииБаллоны из Объект.ПартииБаллоны Цикл
		//	Для Н =1 По 20 Цикл
		//		Если Не ЗначениеЗаполнено(строкаПартииБаллоны["Баллон"+н] ) Тогда
		//			ЕстьНеЗакрытыеПарти = Истина;
		//			Прервать;
		//		Иначе
		//			СчетчикБаллонов = СчетчикБаллонов+1;
		//		КонецЕсли;	
		//		//	строкаПартииБаллоны["Вес"+н]=ПереченьВесов[Н-1] ;
		//	КонецЦикла;
		//	Если ЕстьНеЗакрытыеПарти Тогда
		//		//ЕстьНеЗакрытыеПарти = Истина;
		//		Прервать;
		//	КонецЕсли;	
		//КонецЦикла;
		Если ЕстьНеЗакрытыеПарти Тогда
			//ПоказатьПредупреждение(,"Для открытия новой партии необходимо заполнить предыдущие " );
			ТекстПредупреждения ="Для открытия новой партии необходимо заполнить предыдущие!";
			Отказ = истина;
			
		ИначеЕсли СчетчикБаллонов>=Объект.КоличествоБаллонов Тогда
			//ПоказатьПредупреждение(,"Количество балонов соответствует типу выпуска, ввод новых партий не возможен " );
			ТекстПредупреждения ="Количество балонов соответствует типу выпуска, ввод новых партий не возможен!";
			Отказ = истина;
	
		КонецЕсли;
	КонецЕсли;
	РезультатНельзяЗаводитьНовуюСтроку =  Новый Структура;
	РезультатНельзяЗаводитьНовуюСтроку.Вставить("Отказ",Отказ);
	РезультатНельзяЗаводитьНовуюСтроку.Вставить("ТекстПредупреждения",ТекстПредупреждения);
	Возврат РезультатНельзяЗаводитьНовуюСтроку
КонецФункции

&НаКлиенте
Процедура УстановитьФормаМодифицированна()
	ЭтаФорма.Модифицированность = Истина
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьКоличествоБаллоновВПартии(ТекущиеДанные)
	СчетчикБаллоновВПартии = 0;
	Для Н =1 По 20 Цикл
		Если ЗначениеЗаполнено(ТекущиеДанные["Баллон"+н] ) Тогда			
			СчетчикБаллоновВПартии = СчетчикБаллоновВПартии+1;
		КонецЕсли;	
	КонецЦикла;
	ТекущиеДанные.КоличествоБаллоновВПартии = СчетчикБаллоновВПартии
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ТекущиеДанные = Элементы.ПартииБаллоны.ТекущиеДанные;
	
	
	
	Если ВыбранноеЗначение.ПеренестиВДокумент Тогда
	//	УстановитьФормаМодифицированна();	
		ПараметрыЗаписи =Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи",  РежимЗаписиДокумента.Запись);
		Записать(ПараметрыЗаписи);
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,ВыбранноеЗначение);
		ПосчитатьКоличествоБаллоновВПартии(ТекущиеДанные);
	КонецЕсли;

	НажатаяКнопка =ВыбранноеЗначение.НажатаяКнопка;
	ТекущаяСтрока = ВыбранноеЗначение.ТекущаяСтрока-1;
	Если НажатаяКнопка="ЗаписатьПартию" Тогда

		
		
		ОткрытьФормуРедактированияПартии(ТекущаяСтрока);
	ИначеЕсли НажатаяКнопка="ПартияВперед" Тогда
		НоваяТекущаяСтрока = ТекущаяСтрока+1;		
		Элементы.ПартииБаллоны.ТекущаяСтрока =НоваяТекущаяСтрока;
		ОткрытьФормуРедактированияПартии(НоваяТекущаяСтрока);
	ИначеЕсли НажатаяКнопка="СоздатьНовуюСтроку" Тогда
		РезультатНельзяЗаводитьНовуюСтроку = НельзяЗаводитьНовуюСтроку();
		НельзяЗаводитьНовуюСтроку = РезультатНельзяЗаводитьНовуюСтроку.Отказ;
		ТекстПредупреждения = РезультатНельзяЗаводитьНовуюСтроку.ТекстПредупреждения;
		Если Не НельзяЗаводитьНовуюСтроку Тогда
			Элементы.ПартииБаллоны.ДобавитьСтроку();
			Элементы.ПартииБаллоны.ТекущаяСтрока =НоваяТекущаяСтрока;
			//ОткрытьФормуРедактированияПартии(НоваяТекущаяСтрока);
		Иначе
			ОткрытьФормуРедактированияПартии(ТекущаяСтрока,ТекстПредупреждения);
		КонецЕсли;
	ИначеЕсли НажатаяКнопка="ПартияНазад" Тогда
		НоваяТекущаяСтрока = ТекущаяСтрока-1;		
		Элементы.ПартииБаллоны.ТекущаяСтрока =НоваяТекущаяСтрока;
		ОткрытьФормуРедактированияПартии(НоваяТекущаяСтрока);
	ИначеЕсли НажатаяКнопка="ПечатьОтчетПоПартии" Тогда		
		ОткрытьФормуРедактированияПартии(ТекущаяСтрока);
		Подключаемый_ВыполнитьКоманду(ЭтаФорма.Команды.Найти("ПодменюПечатьОбычное_ОтчетПоПартии"));
	ИначеЕсли НажатаяКнопка="ПечатьПартии" Тогда		
		ОткрытьФормуРедактированияПартии(ТекущаяСтрока);
		Подключаемый_ВыполнитьКоманду(ЭтаФорма.Команды.Найти("ПодменюПечатьОбычное_Партия"));
	КонецЕсли;
	//Для Н =1 По 20 Цикл
	//	ТекущиеДанные["Баллон"+н] =ВыбранноеЗначение["Баллон"+н];
	//	//ТекущиеДанные["Вес"+н]=ПереченьВесов[Н-1] ;
	//КонецЦикла;
	
КонецПроцедуры

&НаСервереБезконтекста
Функция ЭтоМедицинскийВыпуск(Тип)
	Если Тип = Справочники.МГС_ТипыВыпускаБаллонов.Медицинский Тогда
		Возврат Истина
	Иначе
		Возврат Ложь
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПартииБаллоныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	// Вставить содержимое обработчика.
	РезультатНельзяЗаводитьНовуюСтроку = НельзяЗаводитьНовуюСтроку();
	НельзяЗаводитьНовуюСтроку = РезультатНельзяЗаводитьНовуюСтроку.Отказ;
	ТекстПредупреждения = РезультатНельзяЗаводитьНовуюСтроку.ТекстПредупреждения;
	Отказ =НельзяЗаводитьНовуюСтроку;
	Если НельзяЗаводитьНовуюСтроку Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения ); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьКоличествоБаллонов()
	// Вставить содержимое обработчика.
	Если ЭтоМедицинскийВыпуск(Объект.ТипВыпуска) Тогда
		Элементы.КоличествоБаллонов.Видимость = Истина
	Иначе
		Элементы.КоличествоБаллонов.Видимость = Ложь
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьЗакрытияОткрытияВыпуска()
	
	// Вставить содержимое обработчика.
	Если Объект.Проведен Тогда	
		
		Элементы.ЗакрытьВыпуск.Видимость = Ложь;
		//ЭтаФорма.ТолькоПросмотр = Истина;
		
		Для каждого Элемент из ЭтаФорма.Элементы Цикл
			Если Элемент. имя ="ГруппаСтандартныхКоманд"
				Или Элемент. имя ="ОткрытьВыпуск"
				Или Элемент. имя ="КоманднаяПанельФормы"
				Или Элемент. имя ="ФормаКоманднаяПанель"
				Или СтрНайти(Элемент. имя,"Печат")>0
				Или СтрНайти(Элемент. имя,"СоздатьНаОсновании")>0
				или  ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
				Продолжить;
			иначеЕсли ТипЗнч(Элемент) = Тип("КнопкаФормы")Тогда
				Элемент.Доступность=Ложь;
			Иначе
				Попытка
					Элемент.ТолькоПросмотр=Истина;			
				Исключение
					
				КонецПопытки;
			КонецЕсли;
			//	Элемент.Доступность=Ложь;
		
		КонецЦикла;
		Элементы.ОткрытьВыпуск.Видимость = Истина;
		Элементы.ОткрытьВыпуск.Доступность = Истина;
	Иначе
		Элементы.ЗакрытьВыпуск.Видимость = Истина;
		Для каждого Элемент из ЭтаФорма.Элементы Цикл
			Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
				Продолжить;
			ИначеЕсли  ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
				Элемент.Доступность=Истина;
			Иначе
				Попытка
					Элемент.ТолькоПросмотр=Ложь;			
				Исключение
					
				КонецПопытки;
			КонецЕсли;
			//Элемент.Доступность=Истина;
	
		КонецЦикла;
		Элементы.ОткрытьВыпуск.Видимость = Ложь;
		Элементы.ОткрытьВыпуск.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЕстьНеЗакрытыеМедицинскиеВыпуски()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_ВыпускБаллонов.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов КАК МГС_ВыпускБаллонов
		|ГДЕ
		|	МГС_ВыпускБаллонов.ТипВыпуска = &ТипВыпуска
		|	И МГС_ВыпускБаллонов.Проведен = ЛОЖЬ
		|	И МГС_ВыпускБаллонов.ПометкаУдаления = ЛОЖЬ
		|	И МГС_ВыпускБаллонов.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТипВыпуска", Справочники.МГС_ТипыВыпускаБаллонов.Медицинский);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ВоЗврат  Истина
	КонецЦикла;
	ВоЗврат Ложь
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецФункции

&НаСервере
Функция ЕстьПустыеПищевыеВыпуски()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_ВыпускБаллонов.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.МГС_ВыпускБаллонов КАК МГС_ВыпускБаллонов
		|ГДЕ
		|	МГС_ВыпускБаллонов.ТипВыпуска <> &ТипВыпуска
		|	И МГС_ВыпускБаллонов.Проведен = ЛОЖЬ
		|	И МГС_ВыпускБаллонов.ПометкаУдаления = ЛОЖЬ
		|	И МГС_ВыпускБаллонов.Ссылка <> &Ссылка
		|	И МГС_ВыпускБаллонов.КоличествоБаллонов = 0";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТипВыпуска", Справочники.МГС_ТипыВыпускаБаллонов.Медицинский);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ВоЗврат  Истина
	КонецЦикла;
	ВоЗврат Ложь
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецФункции

&НаКлиенте
Процедура ТипВыпускаПриИзменении(Элемент)
	Если ЭтоМедицинскийВыпуск(Объект.ТипВыпуска) Тогда
		ЕстьНеЗакрытыеВыпуски = ЕстьНеЗакрытыеМедицинскиеВыпуски();
		Если ЕстьНеЗакрытыеВыпуски Тогда
			ПоказатьПредупреждение(,"Создание нового медицинского выпуска невозможно, т.к. есть не закрытые выпуски" );
			Объект.ТипВыпуска = "" 
		КонецЕсли;
	иначе //проверим чтобы не было пустых пищевых
		ЕстьПустыеПищевыеВыпуски = ЕстьПустыеПищевыеВыпуски();
		Если ЕстьПустыеПищевыеВыпуски Тогда
			ПоказатьПредупреждение(,"Создание нового пищевого выпуска невозможно, т.к. есть пустые выпуски (необходимо их использовать для ввода или пометить на удаление)" );
			Объект.ТипВыпуска = "" 
		КонецЕсли;
	КонецЕсли;	
	// Вставить содержимое обработчика.
	ОбновитьВидимостьКоличествоБаллонов()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(параметры.ЗначениеКопирования) Тогда
		Отказ = истина;
		Возврат;		
	КонецЕсли; 
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	//Вставить содержимое обработчика
	ОбновитьВидимостьКоличествоБаллонов();
	ОбновитьВидимостьЗакрытияОткрытияВыпуска();
	
	Если РольДоступна("МГС_УчетБаллонов_Оператор") Тогда
		Элементы.Дата.ТолькоПросмотр = Истина;
		Элементы.Номер.ТолькоПросмотр = Истина;
		Элементы.ПартииБаллоныДатаПартии.ТолькоПросмотр = Истина;
	Иначе
		//Возврат Ложь
		Элементы.Дата.ТолькоПросмотр = Ложь;
		Элементы.Номер.ТолькоПросмотр = Ложь;
		Элементы.ПартииБаллоныДатаПартии.ТолькоПросмотр = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТипВыпускаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Объект.ПартииБаллоны.Количество()>0 тогда
		ПоказатьПредупреждение(,"Для изменения типа выпуска необходимо удалить введенные партии" );
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьВыпуск(Команда)
	// Вставить содержимое обработчика.,
	ПараметрыЗаписи =Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи",  РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	ОбновитьВидимостьЗакрытияОткрытияВыпуска();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыпуск(Команда)
	// Вставить содержимое обработчика.
	ПараметрыЗаписи =Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения);
	Записать(ПараметрыЗаписи);
	ОбновитьВидимостьЗакрытияОткрытияВыпуска();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Вставить содержимое обработчика
	Если Не ЗначениеЗаполнено(Объект.ТипВыпуска) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен тип выпуска";
		//Сообщение.Поле = "";
		//Сообщение.УстановитьДанные();
		Сообщение.Сообщить();
		Отказ = истина
		
	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Вставить содержимое обработчика.
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
КонецПроцедуры
