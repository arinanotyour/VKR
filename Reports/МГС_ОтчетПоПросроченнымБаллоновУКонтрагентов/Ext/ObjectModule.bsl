
Процедура ПриКомпоновкеРезультата2(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ДанныеТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ДанныеТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	

	Для Каждого стр из ДанныеТЗ Цикл
		стр.КоличествоОстаток	= 555;	
//		Текст.ЗаписатьСтроку(СокрЛП(Строка(стр.Организация))+"~"+СокрЛП(стр.ПодразделениеОрганизацииКПП)+"~"+Формат(стр.Начислено13,"ЧГ=0")+"~"+Формат(стр.Начислено30,"ЧГ=0"));
	КонецЦикла;
	//Текст.Закрыть();
КонецПроцедуры

Функция ПолучитьОстаткиБаллонов(ДатаОтчета)
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МГС_БаллоныУКонтрагентовОстатки.Организация КАК Организация,
		|	МГС_БаллоныУКонтрагентовОстатки.ТипБаллона КАК ТипБаллона,
		|	МГС_БаллоныУКонтрагентовОстатки.Контрагент КАК Контрагент,
		|	МГС_БаллоныУКонтрагентовОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ОстаткиБаллонов
		|ИЗ
		|	РегистрНакопления.МГС_БаллоныУКонтрагентов.Остатки(&Период, ) КАК МГС_БаллоныУКонтрагентовОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(МГС_БаллоныУКонтрагентов.Количество) КАК Количество,
		|	МГС_БаллоныУКонтрагентов.Организация КАК Организация,
		|	МГС_БаллоныУКонтрагентов.ТипБаллона КАК ТипБаллона,
		|	МГС_БаллоныУКонтрагентов.Контрагент КАК Контрагент,
		|	МГС_БаллоныУКонтрагентов.ДокументОтгрузки КАК ДокументОтгрузки,
		|	МГС_БаллоныУКонтрагентов.ДокументОтгрузки.ДатаВозвратаТары КАК ДатаВозвратаТары
		|ПОМЕСТИТЬ ВтОтгрузки
		|ИЗ
		|	РегистрНакопления.МГС_БаллоныУКонтрагентов КАК МГС_БаллоныУКонтрагентов
		|ГДЕ
		|	МГС_БаллоныУКонтрагентов.Период < &Период
		|	И МГС_БаллоныУКонтрагентов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (МГС_БаллоныУКонтрагентов.Организация, МГС_БаллоныУКонтрагентов.ТипБаллона, МГС_БаллоныУКонтрагентов.Контрагент) В
		|			(ВЫБРАТЬ
		|				ОстаткиБаллонов.Организация,
		|				ОстаткиБаллонов.ТипБаллона,
		|				ОстаткиБаллонов.Контрагент
		|			ИЗ
		|				ОстаткиБаллонов КАК ОстаткиБаллонов)
		|
		|СГРУППИРОВАТЬ ПО
		|	МГС_БаллоныУКонтрагентов.Организация,
		|	МГС_БаллоныУКонтрагентов.ТипБаллона,
		|	МГС_БаллоныУКонтрагентов.Контрагент,
		|	МГС_БаллоныУКонтрагентов.ДокументОтгрузки";
	
	Запрос.УстановитьПараметр("Период", ДатаОтчета.Дата+24*3600);
	
	Запрос.Выполнить();
	 
	ОстаткиБаллонов = Запрос.МенеджерВременныхТаблиц.Таблицы[0].ПолучитьДанные().Выгрузить();
	Отгрузки = Запрос.МенеджерВременныхТаблиц.Таблицы[1].ПолучитьДанные().Выгрузить();
	Отгрузки.Сортировать("ДокументОтгрузки Убыв");
	
	ОстаткиБаллоновИтог = Новый ТаблицаЗначений;
	ОстаткиБаллоновИтог = ОстаткиБаллонов.СкопироватьКолонки();
	ОстаткиБаллоновИтог.Колонки.Добавить("ДокументОтгрузки");
	ОстаткиБаллоновИтог.Колонки.Добавить("КоличествоПросроченно",Новый ОписаниеТипов("Число"));
	ОстаткиБаллоновИтог.Колонки.Добавить("ДатаВозвратаТары",Новый ОписаниеТипов("Дата"));
	
	Для каждого СтрокаОстаткиБаллонов Из ОстаткиБаллонов Цикл
		КоличествоОстаток =СтрокаОстаткиБаллонов.КоличествоОстаток;
		Если КоличествоОстаток<0 Тогда
			СтрокаОстаткиБаллоновИтог = ОстаткиБаллоновИтог.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОстаткиБаллоновИтог,СтрокаОстаткиБаллонов);
			Продолжить		
		КонецЕсли; 
		ОтборПострокам = Новый Структура;
		ОтборПострокам.Вставить("Организация",СтрокаОстаткиБаллонов.Организация);
		ОтборПострокам.Вставить("ТипБаллона",СтрокаОстаткиБаллонов.ТипБаллона);
		ОтборПострокам.Вставить("Контрагент",СтрокаОстаткиБаллонов.Контрагент);
		
		НайденныеСтрокиОтгрузки = Отгрузки.НайтиСтроки(ОтборПострокам);
		Для каждого НайденнаяСтрокиОтгрузки Из  НайденныеСтрокиОтгрузки Цикл
			СтрокаОстаткиБаллоновИтог = ОстаткиБаллоновИтог.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОстаткиБаллоновИтог,НайденнаяСтрокиОтгрузки);
			
			КоличествоОстатокПоТекущейОтгрузке= Мин(КоличествоОстаток,НайденнаяСтрокиОтгрузки.Количество);
			СтрокаОстаткиБаллоновИтог.КоличествоОстаток =  КоличествоОстатокПоТекущейОтгрузке;
			СтрокаОстаткиБаллоновИтог.ДокументОтгрузки = НайденнаяСтрокиОтгрузки.ДокументОтгрузки;
			ДатаВозвратаТары = НайденнаяСтрокиОтгрузки.ДатаВозвратаТары;
			Если ДатаВозвратаТары = '00010101000000' Тогда
				ДатаВозвратаТары= НайденнаяСтрокиОтгрузки.ДокументОтгрузки.дата+120*3600*24			
			КонецЕсли; 
			
			СтрокаОстаткиБаллоновИтог.ДатаВозвратаТары = ДатаВозвратаТары;
			Если СтрокаОстаткиБаллоновИтог.ДатаВозвратаТары< ДатаОтчета.Дата Тогда
				СтрокаОстаткиБаллоновИтог.КоличествоПросроченно = КоличествоОстатокПоТекущейОтгрузке
			КонецЕсли; 
			
			
			КоличествоОстаток = КоличествоОстаток-КоличествоОстатокПоТекущейОтгрузке;
			Если  КоличествоОстаток = 0 Тогда
				Прервать			
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЦикла; 
	


	Возврат ОстаткиБаллоновИтог

КонецФункции // ()

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);	
	
	//ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	//ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки); 
	
	
	Для каждого ТекущаяПользовталеьскаЯНАСТРОЙКА Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТекущаяПользовталеьскаЯНАСТРОЙКА.Параметр =Новый ПараметрКомпоновкиДанных("ДатаОтчета") Тогда
			ДатаОтчета = ТекущаяПользовталеьскаЯНАСТРОЙКА.Значение;
				прервать
		КонецЕсли;
	КонецЦикла;
	ОстаткиБаллонов = ПолучитьОстаткиБаллонов(ДатаОтчета);
	
	
	
	
	ВнешнийНаборДанных = Новый Структура("ОстаткиБаллонов", ОстаткиБаллонов); 
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
	
	ДокументРезультат.Очистить();
	
 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
КонецПроцедуры